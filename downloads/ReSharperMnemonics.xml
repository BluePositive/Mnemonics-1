<?xml version="1.0"?>
<TemplatesExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" family="Live Templates">
  <Template uid="872a17cd-8a7d-4c35-8569-37ad786c4b53" shortcut="c" description="" text="public class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1be898b2-dc6c-4bb4-b2ca-912414015765" shortcut="a" description="" text="public abstract class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e6079ac-a10f-4196-9372-4d4166e88d7c" shortcut="C" description="" text="public static class $CLASSNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;MyClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4cf2912a-7e49-4a32-b4f1-73f934bc755f" shortcut="i" description="" text="public interface $INTERFACENAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="INTERFACENAME" expression="constant(&quot;IMyInterface&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae3cae86-f3e1-48f4-8cb8-fdd95f4e9b8d" shortcut="s" description="" text="public struct $STRUCTNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="STRUCTNAME" expression="constant(&quot;MyStruct&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ae59f5f-1e20-419a-9dcd-30da0ce4cbc4" shortcut="e" description="" text="public enum $ENUMNAME${$END$}" reformat="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="ENUMNAME" expression="constant(&quot;MyEnum&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8bedf738-ebfd-4a7b-bbfe-af877d4d62b8" shortcut="c" description="" text="Public Class $CLASSNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;SomeClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea7ff2f9-8900-498b-bdc5-c28d8141d28f" shortcut="a" description="" text="Public MustInherit Class $CLASSNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="CLASSNAME" expression="constant(&quot;SomeClass&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="98412cd2-29b9-4042-9f72-c07f1bf911c3" shortcut="C" description="" text="Public Module $MODULENAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="MODULENAME" expression="constant(&quot;SomeModule&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18a3ac6c-cb8d-44a5-af43-b745f340a7cc" shortcut="i" description="" text="Public Interface $INTERFACENAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="INTERFACENAME" expression="constant(&quot;ISomeInterface&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30c8b06c-2c10-4bde-8510-3ea5f0844601" shortcut="s" description="" text="Public Structure $STRUCTNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="STRUCTNAME" expression="constant(&quot;SomeStructure&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b59b951-140f-4b6b-9611-521bc007ab0e" shortcut="e" description="" text="Public Enum $ENUMNAME$" reformat="False">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="ENUMNAME" expression="constant(&quot;SomeEnum&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="080a39f7-3e53-4f23-b60d-d2bc8cd9b27c" shortcut="vb" description="A field of type $typename$" text="private bool $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2c405daf-3e70-40ff-a6cf-64ffef29efa3" shortcut="vc" description="A field of type $typename$" text="private char $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="45023a1d-fa03-4621-a16a-24669695d3ea" shortcut="vf" description="A field of type $typename$" text="private float $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cce426f5-7846-4431-9079-0839ac6cfbb2" shortcut="vby" description="A field of type $typename$" text="private byte $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0ee0a01-b406-48a9-a0f3-a56132cd1a6a" shortcut="vd" description="A field of type $typename$" text="private double $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f170d30e-c35a-484d-ad51-3b6f318b366a" shortcut="vi" description="A field of type $typename$" text="private int $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e44b1e31-d70f-4fef-8556-c48a26e019fc" shortcut="vm" description="A field of type $typename$" text="private decimal $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56d9e5dc-e8b3-4eb5-af33-b43272335e5e" shortcut="vs" description="A field of type $typename$" text="private string $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5250b9b1-233b-476d-9285-0ea505baa6d9" shortcut="vl" description="A field of type $typename$" text="private long $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e7e8d41c-dc9f-4cc3-aba5-b82b3deaffef" shortcut="vu" description="A field of type $typename$" text="private uint $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e1ead201-892c-45ea-a5b4-687bb952bd33" shortcut="vg" description="A field of type $typename$" text="private System.Guid $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18c820de-75f0-49e2-ae16-a0d1f4842e08" shortcut="vt" description="A field of type $typename$" text="private System.DateTime $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e5e9ea2e-8b91-405e-8050-f8a36d8501d0" shortcut="vsb" description="A field of type $typename$" text="private System.Text.StringBuilder $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ad0d754a-fd02-40e5-9a4f-13a3e40d7ebb" shortcut="vl.b" description="A field of type System.Collections.Generic.List&lt;bool&gt;" text="private System.Collections.Generic.List&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="20a59c7e-da0d-47f5-bc1b-0e8f5110a247" shortcut="vl.c" description="A field of type System.Collections.Generic.List&lt;char&gt;" text="private System.Collections.Generic.List&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="951296b0-ff8b-46d8-8563-5b902af9e54a" shortcut="vl.f" description="A field of type System.Collections.Generic.List&lt;float&gt;" text="private System.Collections.Generic.List&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06552712-6798-46e6-9bb6-c1827f135607" shortcut="vl.by" description="A field of type System.Collections.Generic.List&lt;byte&gt;" text="private System.Collections.Generic.List&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78982961-829e-4be5-a449-2699d98e50b1" shortcut="vl.d" description="A field of type System.Collections.Generic.List&lt;double&gt;" text="private System.Collections.Generic.List&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01e74c6c-e5fb-4bf9-916b-a27a61ff9210" shortcut="vl.i" description="A field of type System.Collections.Generic.List&lt;int&gt;" text="private System.Collections.Generic.List&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9df62190-c191-49d3-b572-f19f92e620d9" shortcut="vl.m" description="A field of type System.Collections.Generic.List&lt;decimal&gt;" text="private System.Collections.Generic.List&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c4a84b2-4a93-4fe2-aa74-ffe7c5e665e6" shortcut="vl.s" description="A field of type System.Collections.Generic.List&lt;string&gt;" text="private System.Collections.Generic.List&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="583ab6c3-6707-416c-ba4b-79bafd4a9e71" shortcut="vl.l" description="A field of type System.Collections.Generic.List&lt;long&gt;" text="private System.Collections.Generic.List&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42dd5de5-39bc-470d-84d9-c13bb0e1e575" shortcut="vl.u" description="A field of type System.Collections.Generic.List&lt;uint&gt;" text="private System.Collections.Generic.List&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8cd2dc2a-c470-4e3c-b529-8af63a5a5442" shortcut="vl.g" description="A field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d5fdd00-e8a1-40c8-8bdb-731c93a15351" shortcut="vl.t" description="A field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d5a03f70-6785-4414-95bf-b6e8329b4f0f" shortcut="vl.sb" description="A field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="private System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c0551ce-ea37-4a97-8f5e-55ce1aafe70c" shortcut="vh.b" description="A field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0816e650-b3da-4101-b999-91ad633b097a" shortcut="vh.c" description="A field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private System.Collections.Generic.HashSet&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5fe6ede8-80d7-432c-9708-80b16a9357a6" shortcut="vh.f" description="A field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private System.Collections.Generic.HashSet&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="67d743c4-e49f-40c1-9863-35e0232da5da" shortcut="vh.by" description="A field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="520d1665-a238-43bf-8d3d-0caa821cebc0" shortcut="vh.d" description="A field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private System.Collections.Generic.HashSet&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="abf55f96-6af6-4524-91d1-7fd3fc9757c8" shortcut="vh.i" description="A field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private System.Collections.Generic.HashSet&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="490ddc02-1de0-4a55-ad2a-9f0709bcaa02" shortcut="vh.m" description="A field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b74cfbe6-417b-46f2-8aa8-a3a76d141557" shortcut="vh.s" description="A field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private System.Collections.Generic.HashSet&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f707f71-c4e2-4ff9-956c-10adf25edcc1" shortcut="vh.l" description="A field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private System.Collections.Generic.HashSet&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="86bc5705-c39f-4b94-a8f3-05b99cf4855e" shortcut="vh.u" description="A field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fef2a6d6-9c8a-4352-b674-d4f63b33cd0a" shortcut="vh.g" description="A field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af89a546-ec75-425e-8112-d7d0db71d329" shortcut="vh.t" description="A field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1db3ef0-6f01-4bec-a12f-e2067ba9ae5b" shortcut="vh.sb" description="A field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="private System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75165e66-3236-42fe-8b01-3990584a1d8e" shortcut="v~b" description="A field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f017d17-22ef-4a69-aa85-1680b5970130" shortcut="v~c" description="A field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7a63c2b-41d0-4367-b0d7-c5f144d64cb0" shortcut="v~f" description="A field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e8a36eab-e316-4ec3-911e-764d952000fd" shortcut="v~by" description="A field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c778bf3d-75c7-44f8-abd4-f1c962f7d0b1" shortcut="v~d" description="A field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3c75d53e-c7e6-490d-9b78-0139c3312878" shortcut="v~i" description="A field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b6c044fd-1a77-4858-b138-f5aa0590504c" shortcut="v~m" description="A field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="360a611b-fbca-4d9e-9525-eac0eddc29cd" shortcut="v~s" description="A field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e222e645-6865-497c-bc8e-fe434eb6ede9" shortcut="v~l" description="A field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="205d7189-f499-47fb-89c0-abc675ecd391" shortcut="v~u" description="A field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13a58d6c-f08f-4f4a-a626-d3aea79756a7" shortcut="v~g" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6222e71-3bf6-4ee7-b912-af548a26182d" shortcut="v~t" description="A field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="93e3fd7b-2d2e-4a2d-9af9-432feed3c217" shortcut="v~sb" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="private System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dcd8bcb3-d251-4ae6-b718-7f6026ff432b" shortcut="vrb" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e8375851-45c4-4ae5-b24a-c343296d09e3" shortcut="vrc" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a6299ec4-b184-4abc-9665-c9169356bbd7" shortcut="vrf" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40fcb4d9-1b3b-45a0-bfd3-2829e0e21deb" shortcut="vrby" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="881c4434-337c-4623-8c27-708ebac50f63" shortcut="vrd" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e3a1b82-e561-49d0-abb0-d2891d401602" shortcut="vri" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="195a2e57-ad4e-437f-85b5-6a2ad3204048" shortcut="vrm" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5748c06-ae82-4fd0-8f26-ee52248bee34" shortcut="vrs" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="350f9ad4-8a65-4bf8-b484-c1cb7696164d" shortcut="vrl" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea05edb7-5bd3-401b-ae20-c49e3a61a62a" shortcut="vru" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8ab65b6-1d9c-4768-b648-5d22b24ab130" shortcut="vrg" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2db14c2-55c0-47ab-a70b-ddbace005b3d" shortcut="vrt" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08578ccc-f32e-49b0-87f0-4ced093c44d7" shortcut="vrsb" description="A readonly field of type $typename$" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d9d761a-10fd-48d1-b90a-521a8cf674d7" shortcut="vrl.b" description="A readonly field of type System.Collections.Generic.List&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="968676b5-db63-46d5-8b80-fdbc856f553d" shortcut="vrl.c" description="A readonly field of type System.Collections.Generic.List&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b2735dd-96ea-449d-a8b2-9da56c6777c1" shortcut="vrl.f" description="A readonly field of type System.Collections.Generic.List&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75f31837-9878-4b23-8f52-a72d8335a8a2" shortcut="vrl.by" description="A readonly field of type System.Collections.Generic.List&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ccb340d1-32e7-405c-bda9-87e542c92e24" shortcut="vrl.d" description="A readonly field of type System.Collections.Generic.List&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="89414ca4-0111-4847-b8f5-a52ffe321f99" shortcut="vrl.i" description="A readonly field of type System.Collections.Generic.List&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b2b5531-4226-434a-b24e-df698944b502" shortcut="vrl.m" description="A readonly field of type System.Collections.Generic.List&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c18dabf8-535c-49ef-8886-2a7f270919d3" shortcut="vrl.s" description="A readonly field of type System.Collections.Generic.List&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8cd30f78-4f89-4a02-9a44-b9f4213d0581" shortcut="vrl.l" description="A readonly field of type System.Collections.Generic.List&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c723ba0-5eb8-47e0-bb9f-58ded38ae4c9" shortcut="vrl.u" description="A readonly field of type System.Collections.Generic.List&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="09b5d468-c51b-4fe0-b712-d07543cfb6c2" shortcut="vrl.g" description="A readonly field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf250409-5ed6-47de-8d50-a3fee14e06df" shortcut="vrl.t" description="A readonly field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="641b90a9-4c77-48ee-8269-facf942d8669" shortcut="vrl.sb" description="A readonly field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d555ec11-5eff-42a2-b5cc-d757f7337dd9" shortcut="vrh.b" description="A readonly field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0bda4e4b-5e14-4799-862f-32428475a68b" shortcut="vrh.c" description="A readonly field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9746e13c-aea2-4cd7-96af-59ee0d127ec3" shortcut="vrh.f" description="A readonly field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ac594de-2ef3-4799-9044-b251708423b8" shortcut="vrh.by" description="A readonly field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0842be58-6d37-4026-b07d-319aae205f91" shortcut="vrh.d" description="A readonly field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dbe5dc77-9a79-4c6f-9311-693f5c167989" shortcut="vrh.i" description="A readonly field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a71b02d-393a-4f67-b452-3b91772c79b7" shortcut="vrh.m" description="A readonly field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea7a6ee3-7190-4c47-ab69-26f9dc1feb96" shortcut="vrh.s" description="A readonly field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7482789b-029b-4864-93cd-ec6da6b7cfb0" shortcut="vrh.l" description="A readonly field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8d4d4d59-3304-43fc-97dd-4a52b19dfa89" shortcut="vrh.u" description="A readonly field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d08cae78-ff0b-4b57-b9f2-05064feca239" shortcut="vrh.g" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e9976c29-5aec-458e-8326-3dc32d2ca5cc" shortcut="vrh.t" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ee172f6c-e64b-4ef6-bf31-17498f052bd5" shortcut="vrh.sb" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="acf7ef3d-d327-4c53-87ed-dfc22a176456" shortcut="vr~b" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="edb5840e-3ae6-49ee-a98f-41c0f06bfde8" shortcut="vr~c" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d1eec97d-aafa-49e2-952f-fdabe5268a92" shortcut="vr~f" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5daa945-e012-4839-86fa-9aac3f6f93d1" shortcut="vr~by" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a43955d-f6c9-4add-ba51-a306d3a29914" shortcut="vr~d" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19462833-d207-49f6-8b54-8aac3167a19b" shortcut="vr~i" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="171659c0-bf5d-453c-ad2d-769e358e36f1" shortcut="vr~m" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fd32f651-acca-496d-a1f6-37b7ec5c9812" shortcut="vr~s" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8288155-79c7-4eb9-ad53-da35a9a09dba" shortcut="vr~l" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f90d01d3-e47e-438d-9594-490176d3ad60" shortcut="vr~u" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c0999cbc-3eff-463a-bf9b-32fadfb02503" shortcut="vr~g" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4071116-5689-482a-bcf9-4c97629161ed" shortcut="vr~t" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e5013bfe-6716-42d3-91f6-8262b8512ad9" shortcut="vr~sb" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="private readonly $type$ $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="type" expression="constant(&quot;type&quot;)" initialRange="0" />
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="682e4e98-9e43-4ec0-ba62-b65d0c6c4039" shortcut="Vb" description="A static field of type $typename$" text="private static bool $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4500489-13a0-46a1-b22b-3288e1936934" shortcut="Vc" description="A static field of type $typename$" text="private static char $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c692427c-a8bc-4cb7-b742-5d5d942cad10" shortcut="Vf" description="A static field of type $typename$" text="private static float $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="082f4c40-2bc5-458d-9c3b-e86e2b7dc3b0" shortcut="Vby" description="A static field of type $typename$" text="private static byte $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="44b5a82c-9fd0-46c0-9f0c-7cd74a7b4907" shortcut="Vd" description="A static field of type $typename$" text="private static double $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3074e467-59ad-4704-94d8-d1b8ce11e773" shortcut="Vi" description="A static field of type $typename$" text="private static int $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1f9b5b7-23d2-4588-bcf6-7ae3d56fbf8c" shortcut="Vm" description="A static field of type $typename$" text="private static decimal $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fb25eb4c-90bc-45e4-9e40-c2e54217a875" shortcut="Vs" description="A static field of type $typename$" text="private static string $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3781110e-c73b-425d-849c-f3597edb640d" shortcut="Vl" description="A static field of type $typename$" text="private static long $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="32485c12-59d7-44a4-bf42-3cc2e108b6f2" shortcut="Vu" description="A static field of type $typename$" text="private static uint $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c04fdf06-a03f-4a5e-ae63-5f690929721b" shortcut="Vg" description="A static field of type $typename$" text="private static System.Guid $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="95049787-6425-4651-beb4-5775458792ed" shortcut="Vt" description="A static field of type $typename$" text="private static System.DateTime $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="371bf045-c799-49de-8ce6-1377a8f14212" shortcut="Vsb" description="A static field of type $typename$" text="private static System.Text.StringBuilder $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e4cf718-9a50-4099-87da-08f56580e9a1" shortcut="Vl.b" description="A static field of type System.Collections.Generic.List&lt;bool&gt;" text="private static System.Collections.Generic.List&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40f06c24-e10a-4110-a596-2660af760665" shortcut="Vl.c" description="A static field of type System.Collections.Generic.List&lt;char&gt;" text="private static System.Collections.Generic.List&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b134239b-5bd3-4594-bf89-277571605f11" shortcut="Vl.f" description="A static field of type System.Collections.Generic.List&lt;float&gt;" text="private static System.Collections.Generic.List&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d636f156-e7ba-44f8-81e2-911dea6dd11a" shortcut="Vl.by" description="A static field of type System.Collections.Generic.List&lt;byte&gt;" text="private static System.Collections.Generic.List&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="330e2ce6-a3c0-4906-aa26-1fbbd0328a6a" shortcut="Vl.d" description="A static field of type System.Collections.Generic.List&lt;double&gt;" text="private static System.Collections.Generic.List&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="36b1a25e-caab-4b59-9bcf-752460ea6425" shortcut="Vl.i" description="A static field of type System.Collections.Generic.List&lt;int&gt;" text="private static System.Collections.Generic.List&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8af68bb4-eb08-4982-aea0-f53388483794" shortcut="Vl.m" description="A static field of type System.Collections.Generic.List&lt;decimal&gt;" text="private static System.Collections.Generic.List&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b90722cc-1bc4-4282-9b30-e7bcf3d3f0e4" shortcut="Vl.s" description="A static field of type System.Collections.Generic.List&lt;string&gt;" text="private static System.Collections.Generic.List&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="20a2142a-fe29-49f0-b200-f49a9b48be76" shortcut="Vl.l" description="A static field of type System.Collections.Generic.List&lt;long&gt;" text="private static System.Collections.Generic.List&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6432bd8b-2354-4c69-86b6-ff7e3e5c515b" shortcut="Vl.u" description="A static field of type System.Collections.Generic.List&lt;uint&gt;" text="private static System.Collections.Generic.List&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a80025f9-af16-46ed-a614-ae0808aaa332" shortcut="Vl.g" description="A static field of type System.Collections.Generic.List&lt;System.Guid&gt;" text="private static System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2c275e76-3f46-47a0-9aa5-9b656037295e" shortcut="Vl.t" description="A static field of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="private static System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="52939f0c-ae03-415f-984e-a4e84490747c" shortcut="Vl.sb" description="A static field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="private static System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55f5a807-9eab-45bb-a557-b77584ba3142" shortcut="Vh.b" description="A static field of type System.Collections.Generic.HashSet&lt;bool&gt;" text="private static System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fce385a4-2f81-417f-9b85-8c183e3a06c0" shortcut="Vh.c" description="A static field of type System.Collections.Generic.HashSet&lt;char&gt;" text="private static System.Collections.Generic.HashSet&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eda594e4-23dd-4bcb-b2b8-159f220752e7" shortcut="Vh.f" description="A static field of type System.Collections.Generic.HashSet&lt;float&gt;" text="private static System.Collections.Generic.HashSet&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="083b3fc6-65a0-400d-af77-fb42faea2d32" shortcut="Vh.by" description="A static field of type System.Collections.Generic.HashSet&lt;byte&gt;" text="private static System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b531083b-a61c-457e-aeaa-f29dd8c98c33" shortcut="Vh.d" description="A static field of type System.Collections.Generic.HashSet&lt;double&gt;" text="private static System.Collections.Generic.HashSet&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b0c6e5b5-4e08-40e2-9e9f-55b5445537fd" shortcut="Vh.i" description="A static field of type System.Collections.Generic.HashSet&lt;int&gt;" text="private static System.Collections.Generic.HashSet&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6abf678d-ce67-422f-9611-129b116a6e71" shortcut="Vh.m" description="A static field of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="private static System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="805675b6-7c81-49d3-ad6c-5c1b16037311" shortcut="Vh.s" description="A static field of type System.Collections.Generic.HashSet&lt;string&gt;" text="private static System.Collections.Generic.HashSet&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c1a674ff-6106-4ff1-9137-8f253e40f123" shortcut="Vh.l" description="A static field of type System.Collections.Generic.HashSet&lt;long&gt;" text="private static System.Collections.Generic.HashSet&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8378a87-20df-4c6e-8150-44506f055cbe" shortcut="Vh.u" description="A static field of type System.Collections.Generic.HashSet&lt;uint&gt;" text="private static System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0b13b57-2063-47e5-83b3-6a5c2fab7efa" shortcut="Vh.g" description="A static field of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="private static System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1806e76b-c7f6-476d-a631-c9141f1b03fe" shortcut="Vh.t" description="A static field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="private static System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31973e50-a37a-427d-93e4-08e6e2d9230a" shortcut="Vh.sb" description="A static field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="private static System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e344989-93d0-4e6d-88c5-ae5e7e3bf311" shortcut="V~b" description="A static field of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="private static System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8cb97470-114f-433b-a68f-cb8995112d2f" shortcut="V~c" description="A static field of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="private static System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4e000c9-3691-47ad-8428-bc11c3c8d5e7" shortcut="V~f" description="A static field of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="private static System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dbda4ab4-1992-43dc-be1d-1cea68332278" shortcut="V~by" description="A static field of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="private static System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3322c2cd-37c8-4627-9c99-eceaad943e81" shortcut="V~d" description="A static field of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="private static System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="359e8ebd-4a68-4490-95c1-94c21716b991" shortcut="V~i" description="A static field of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="private static System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a9d5828-65ff-4582-a948-b38f787aa141" shortcut="V~m" description="A static field of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="private static System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5548e9a1-43a4-4424-b63d-ac7e1ccef9b6" shortcut="V~s" description="A static field of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="private static System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ca5373c-6422-40fb-b356-66a54b6d1755" shortcut="V~l" description="A static field of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="private static System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4ed0b91-4d23-4ffb-a350-fb35684ad4c1" shortcut="V~u" description="A static field of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="private static System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e75c73f-185d-4b55-ac40-ec18151f78e7" shortcut="V~g" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="be15a6c7-47e0-4b1b-8519-9f9c86b27bad" shortcut="V~t" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f470323-0806-4da3-a595-ba73d940bbdb" shortcut="V~sb" description="A static field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="private static System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $fieldname$;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="32d90372-4482-48d8-8205-abe000ebc6e2" shortcut="nb" description="A field of type $typename$ initialized to the default value." text="private bool $fieldname$ = false;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0005a8df-479c-4c2e-9495-3c8b3ab7bb81" shortcut="nc" description="A field of type $typename$ initialized to the default value." text="private char $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f9a5d85-5bd0-4029-8b98-37a6f9bcf828" shortcut="nf" description="A field of type $typename$ initialized to the default value." text="private float $fieldname$ = 0.0f;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4fd9379-6ae4-49d5-9702-de6ff99546f1" shortcut="nby" description="A field of type $typename$ initialized to the default value." text="private byte $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a53680ce-790a-4837-b87b-099a0df0db4f" shortcut="nd" description="A field of type $typename$ initialized to the default value." text="private double $fieldname$ = 0.0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ebe85f75-acf3-4c6d-8a04-eb27cb2c8e9e" shortcut="ni" description="A field of type $typename$ initialized to the default value." text="private int $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df2b82d6-d63f-4467-9273-eb37316799bc" shortcut="nm" description="A field of type $typename$ initialized to the default value." text="private decimal $fieldname$ = 0M;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e6852c1-3b6c-4bee-b025-9ea25a32ee69" shortcut="ns" description="A field of type $typename$ initialized to the default value." text="private string $fieldname$ = &quot;&quot;;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f83092cd-bd6b-4327-87b4-58cd1d97e93f" shortcut="nl" description="A field of type $typename$ initialized to the default value." text="private long $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e5ca069-80ed-42c0-97ba-e57455254d49" shortcut="nu" description="A field of type $typename$ initialized to the default value." text="private uint $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f04e3470-be5a-4668-b577-2dc682357193" shortcut="ng" description="A field of type $typename$ initialized to the default value." text="private System.Guid $fieldname$ = System.Guid.NewGuid();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="25f675c6-5e84-4093-8fcc-8e95557b22cb" shortcut="nt" description="A field of type $typename$ initialized to the default value." text="private System.DateTime $fieldname$ = System.DateTime.UtcNow;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d0ffbf1-ddca-4032-ab42-56f4f6de1712" shortcut="nsb" description="A field of type $typename$ initialized to the default value." text="private System.Text.StringBuilder $fieldname$ = new System.Text.StringBuilder;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92ebfde7-b302-4dc5-a5ab-d443b4c8bbee" shortcut="nl.b" description="A field of type System.Collections.Generic.List&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;bool&gt; $fieldname$ = new System.Collections.Generic.List&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7caca5cc-d155-462d-9a43-21139bc65fef" shortcut="nl.c" description="A field of type System.Collections.Generic.List&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;char&gt; $fieldname$ = new System.Collections.Generic.List&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37603a8a-c065-4741-8f36-d439c6757187" shortcut="nl.f" description="A field of type System.Collections.Generic.List&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;float&gt; $fieldname$ = new System.Collections.Generic.List&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="569c27b8-1636-4f42-8bae-990e7dd6d144" shortcut="nl.by" description="A field of type System.Collections.Generic.List&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;byte&gt; $fieldname$ = new System.Collections.Generic.List&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ed9e540-e4da-4478-a85b-0ac29b330e03" shortcut="nl.d" description="A field of type System.Collections.Generic.List&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;double&gt; $fieldname$ = new System.Collections.Generic.List&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f6d40f54-16ca-4732-bdb8-d489728a761c" shortcut="nl.i" description="A field of type System.Collections.Generic.List&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;int&gt; $fieldname$ = new System.Collections.Generic.List&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aab2da20-84a1-4181-89f8-929a3d109822" shortcut="nl.m" description="A field of type System.Collections.Generic.List&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.List&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bdcebae7-16ca-4f1b-9282-426424283379" shortcut="nl.s" description="A field of type System.Collections.Generic.List&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;string&gt; $fieldname$ = new System.Collections.Generic.List&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="127586ce-ff54-4474-9a65-7a15b027bf26" shortcut="nl.l" description="A field of type System.Collections.Generic.List&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;long&gt; $fieldname$ = new System.Collections.Generic.List&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="63b459fa-1ae3-49d8-887f-1f3be99bfbb9" shortcut="nl.u" description="A field of type System.Collections.Generic.List&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;uint&gt; $fieldname$ = new System.Collections.Generic.List&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a9e7b45a-d16b-457d-9955-ca3a1eb8e8d5" shortcut="nl.g" description="A field of type System.Collections.Generic.List&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b49378d-cdf2-47b0-923d-6ade7b4ff67b" shortcut="nl.t" description="A field of type System.Collections.Generic.List&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a039a2e6-92b4-466c-b5cc-fc43f70e479f" shortcut="nl.sb" description="A field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d9b80e5e-4fab-49d4-896f-61f2f625c41d" shortcut="nh.b" description="A field of type System.Collections.Generic.HashSet&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f0ec143-0dca-4eb7-aa7d-f8d31a965649" shortcut="nh.c" description="A field of type System.Collections.Generic.HashSet&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;char&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e2e363a-237b-4d8e-adf9-27ef9a91220f" shortcut="nh.f" description="A field of type System.Collections.Generic.HashSet&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;float&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8e60c19d-527e-47b9-ba61-accfcdda66a5" shortcut="nh.by" description="A field of type System.Collections.Generic.HashSet&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2859c1e-8bf6-451f-93b8-d8009f7d5e8d" shortcut="nh.d" description="A field of type System.Collections.Generic.HashSet&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;double&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8d4719ad-fa25-41c7-93c8-c75e054607d2" shortcut="nh.i" description="A field of type System.Collections.Generic.HashSet&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;int&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4ff94abe-8f3f-4e83-aaae-1958bc35cad8" shortcut="nh.m" description="A field of type System.Collections.Generic.HashSet&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97d44ed8-ce4f-40cd-9bd0-a56a03316fa8" shortcut="nh.s" description="A field of type System.Collections.Generic.HashSet&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;string&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55e7b5a3-d36d-4dde-81a8-cda4e1fd3e7b" shortcut="nh.l" description="A field of type System.Collections.Generic.HashSet&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;long&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b963f16-8710-4930-8786-e5d599717c1d" shortcut="nh.u" description="A field of type System.Collections.Generic.HashSet&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c2ab1352-7480-4da5-9afc-8fd229ea7427" shortcut="nh.g" description="A field of type System.Collections.Generic.HashSet&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ff6dad44-a9e1-4c42-a50c-543e547f0fcb" shortcut="nh.t" description="A field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7462a129-6dea-40f6-afb6-485fb1fcf62c" shortcut="nh.sb" description="A field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2fa9e66b-6e6d-45f5-81fd-5ee2c643b1aa" shortcut="n~b" description="A field of type System.Collections.Generic.IEnumerable&lt;bool&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c715c2f3-2d97-43de-a276-080ac4a0c3b0" shortcut="n~c" description="A field of type System.Collections.Generic.IEnumerable&lt;char&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c306b58-9e62-426c-8045-43d2d53595f9" shortcut="n~f" description="A field of type System.Collections.Generic.IEnumerable&lt;float&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="171cfc3c-f033-459d-8bda-e59309ac92a1" shortcut="n~by" description="A field of type System.Collections.Generic.IEnumerable&lt;byte&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="64a67c84-e328-47a6-85a4-2ff2adb48325" shortcut="n~d" description="A field of type System.Collections.Generic.IEnumerable&lt;double&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d44f5f23-4d62-4e2f-80f7-18bbc75dc399" shortcut="n~i" description="A field of type System.Collections.Generic.IEnumerable&lt;int&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ddf91df2-be44-4d90-b1e4-318ccfaf53a6" shortcut="n~m" description="A field of type System.Collections.Generic.IEnumerable&lt;decimal&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5cbf2d6-a8c9-4948-8a2c-9fb5a9650bfb" shortcut="n~s" description="A field of type System.Collections.Generic.IEnumerable&lt;string&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9551786a-7131-40b5-83ca-8f0f553ea0ff" shortcut="n~l" description="A field of type System.Collections.Generic.IEnumerable&lt;long&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa9aa7ee-6c29-464e-afee-4a480455b106" shortcut="n~u" description="A field of type System.Collections.Generic.IEnumerable&lt;uint&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="520b383d-5ac9-4a07-a3a5-701cba1c6da2" shortcut="n~g" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d866acde-fa86-40c8-bcf9-98a16cb4bdf0" shortcut="n~t" description="A field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7473c3a9-74f5-453f-91dd-b2bbbe3d860f" shortcut="n~sb" description="A field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37a613bb-a710-48b5-8875-cb9a77ac07f8" shortcut="ob" description="A readonly field of type $typename$ initialized to the default value." text="private readonly bool $fieldname$ = false;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="493c48cb-ad4f-4a31-a8dd-66cf11ebf261" shortcut="oc" description="A readonly field of type $typename$ initialized to the default value." text="private readonly char $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e11a02f-1b46-486f-94f8-9d4d8fed0598" shortcut="of" description="A readonly field of type $typename$ initialized to the default value." text="private readonly float $fieldname$ = 0.0f;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="13738416-d8a1-4c76-ba09-88e5a1910d27" shortcut="oby" description="A readonly field of type $typename$ initialized to the default value." text="private readonly byte $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c613efb0-148d-4ef1-a5a2-5f863de41f05" shortcut="od" description="A readonly field of type $typename$ initialized to the default value." text="private readonly double $fieldname$ = 0.0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af08d156-495c-4812-8707-05f35f3741e6" shortcut="oi" description="A readonly field of type $typename$ initialized to the default value." text="private readonly int $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fbbe1b90-ed40-4fe9-b27b-81a5a0e906bf" shortcut="om" description="A readonly field of type $typename$ initialized to the default value." text="private readonly decimal $fieldname$ = 0M;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e8ac05e2-90be-403d-bb91-d7cac7277bca" shortcut="os" description="A readonly field of type $typename$ initialized to the default value." text="private readonly string $fieldname$ = &quot;&quot;;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aa835d7e-7592-45b8-82e3-37e5451cab1e" shortcut="ol" description="A readonly field of type $typename$ initialized to the default value." text="private readonly long $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f97df315-a173-4d72-9470-2fb67bc54707" shortcut="ou" description="A readonly field of type $typename$ initialized to the default value." text="private readonly uint $fieldname$ = 0;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4b342b6-2d53-47c7-8b21-fd4d58347853" shortcut="og" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.Guid $fieldname$ = System.Guid.NewGuid();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c561a93c-2a5a-4dfa-800e-342a2a61b2c9" shortcut="ot" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.DateTime $fieldname$ = System.DateTime.UtcNow;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d8480cd6-adc8-4748-a100-01a4bb03f502" shortcut="osb" description="A readonly field of type $typename$ initialized to the default value." text="private readonly System.Text.StringBuilder $fieldname$ = new System.Text.StringBuilder;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1550ce17-e977-4629-8128-64dea5b88eac" shortcut="ol.b" description="A readonly field of type System.Collections.Generic.List&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;bool&gt; $fieldname$ = new System.Collections.Generic.List&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae82abc0-038f-4332-9ac0-2cf6b7007501" shortcut="ol.c" description="A readonly field of type System.Collections.Generic.List&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;char&gt; $fieldname$ = new System.Collections.Generic.List&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cfbd9f7b-36f7-48e9-8651-ff1ecf8b4309" shortcut="ol.f" description="A readonly field of type System.Collections.Generic.List&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;float&gt; $fieldname$ = new System.Collections.Generic.List&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed60df30-bd8a-44fa-9813-0c3ede574920" shortcut="ol.by" description="A readonly field of type System.Collections.Generic.List&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;byte&gt; $fieldname$ = new System.Collections.Generic.List&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d6bc43ca-7e16-47f5-864c-6dd13d1bd69f" shortcut="ol.d" description="A readonly field of type System.Collections.Generic.List&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;double&gt; $fieldname$ = new System.Collections.Generic.List&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8d7e125d-7d6f-4495-92ea-5fc69dbc48d2" shortcut="ol.i" description="A readonly field of type System.Collections.Generic.List&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;int&gt; $fieldname$ = new System.Collections.Generic.List&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef84888b-ce10-4fc3-b763-ba2e0ad36ce5" shortcut="ol.m" description="A readonly field of type System.Collections.Generic.List&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.List&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3c286d95-72ea-4789-b0a6-b33757d4c2bc" shortcut="ol.s" description="A readonly field of type System.Collections.Generic.List&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;string&gt; $fieldname$ = new System.Collections.Generic.List&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72383fe4-75d1-4a3e-87e0-71aa85be6c1d" shortcut="ol.l" description="A readonly field of type System.Collections.Generic.List&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;long&gt; $fieldname$ = new System.Collections.Generic.List&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8b413477-1884-48ab-b05a-7b2b9295beb5" shortcut="ol.u" description="A readonly field of type System.Collections.Generic.List&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;uint&gt; $fieldname$ = new System.Collections.Generic.List&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5aba2889-2648-478d-86e2-56049d68262f" shortcut="ol.g" description="A readonly field of type System.Collections.Generic.List&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c46b6892-498d-4f5e-bf39-045539971c39" shortcut="ol.t" description="A readonly field of type System.Collections.Generic.List&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b86df1b8-0023-46db-9e0b-eb4019eca349" shortcut="ol.sb" description="A readonly field of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private readonly System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b18b4434-6c4e-4290-82c6-95e3a1bc4e3b" shortcut="oh.b" description="A readonly field of type System.Collections.Generic.HashSet&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;bool&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac1cd941-e474-469d-b407-ca8b3a0cc226" shortcut="oh.c" description="A readonly field of type System.Collections.Generic.HashSet&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;char&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f16400d-81fc-4195-ae48-bd5583db0be3" shortcut="oh.f" description="A readonly field of type System.Collections.Generic.HashSet&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;float&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9533210c-74a8-421d-86ce-83785037cd24" shortcut="oh.by" description="A readonly field of type System.Collections.Generic.HashSet&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;byte&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2debfda3-f5c9-4a8a-8594-82eaa597d5bc" shortcut="oh.d" description="A readonly field of type System.Collections.Generic.HashSet&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;double&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0a3ffdd3-ccc2-454e-b47a-8d8f85493611" shortcut="oh.i" description="A readonly field of type System.Collections.Generic.HashSet&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;int&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e7cec18-666c-4e5c-8b14-892b667e7eb8" shortcut="oh.m" description="A readonly field of type System.Collections.Generic.HashSet&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d6bde6d-c4ec-41e0-b6cf-3c30fca6aa64" shortcut="oh.s" description="A readonly field of type System.Collections.Generic.HashSet&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;string&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1aba516a-aba2-4768-a2fb-7c12f4e29798" shortcut="oh.l" description="A readonly field of type System.Collections.Generic.HashSet&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;long&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3cf81b7e-62b7-4898-af2e-438bef428ef7" shortcut="oh.u" description="A readonly field of type System.Collections.Generic.HashSet&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;uint&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="90957297-e17b-4586-9b5b-adb3cc75a64e" shortcut="oh.g" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a66d2ab-852e-43a9-a11d-b2c0dec64e7b" shortcut="oh.t" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="28e0e164-fd9f-482f-b623-c687079af4bc" shortcut="oh.sb" description="A readonly field of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private readonly System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="60f6a202-7c4a-47a5-982f-64a830380f1d" shortcut="o~b" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;bool&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;bool&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;bool&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f647c27-451c-4beb-8cbf-1fc82355bd87" shortcut="o~c" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;char&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;char&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;char&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e8ad4ee-0d90-4a40-97eb-616d01d172d2" shortcut="o~f" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;float&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;float&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;float&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5de39518-63e1-4fe6-9ba3-f21be934bf0b" shortcut="o~by" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;byte&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;byte&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;byte&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc8235aa-c441-441c-9399-11530e4b8466" shortcut="o~d" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;double&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;double&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;double&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="469d513c-0fb8-4407-b582-9a4d4f4080e8" shortcut="o~i" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;int&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;int&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;int&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce234af8-4fcc-4216-8d34-d7ad17225bbf" shortcut="o~m" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;decimal&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;decimal&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;decimal&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8c679cb-de9a-4ade-b7ba-43f04340b921" shortcut="o~s" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;string&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;string&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;string&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7bc1327b-3579-4d81-b1d5-70110e11b866" shortcut="o~l" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;long&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;long&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;long&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7be518bb-3c02-4fa0-8ebf-e528285c391c" shortcut="o~u" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;uint&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;uint&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;uint&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ede06088-ae3d-45c0-b000-6efe01447bb3" shortcut="o~g" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Guid&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="144d1276-0c96-4e18-8a43-4fc418ef20e2" shortcut="o~t" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae3a6038-c925-46e4-976f-b74cd5641524" shortcut="o~sb" description="A readonly field of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; initialized to the default value." text="private readonly System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $fieldname$ = new System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;();" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f33691a-ca4b-4ec8-8d0c-c0c6652723bf" shortcut="tb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d51df400-e908-48e8-bbae-3348fa8e6898" shortcut="tc" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b9cc49f-63ee-4f99-97ba-b385f88ab06f" shortcut="tf" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c33048f-5978-4d4c-a057-fded2a89ef20" shortcut="tby" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de4934be-17ff-4f7b-8e5d-987e75cd4996" shortcut="td" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="94618445-d009-4ae0-b0eb-8ea7fc02c078" shortcut="ti" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6691092a-0eb3-4f1a-8152-4b8d9c4f054b" shortcut="tm" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2053b5f1-9d36-4015-a653-1e2af476ff0f" shortcut="ts" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="720d9ef6-626c-443d-b03a-e03307a91d15" shortcut="tl" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f4d2bce-d932-4f58-bf76-4d6c0a118563" shortcut="tu" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="740147cf-b0e0-47d5-89b8-a1284126aeac" shortcut="tg" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a520a5bc-7880-4ae2-9cdd-0f5bd700522a" shortcut="tt" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a38d8e4f-0c8a-4ae5-aca3-643f6e514374" shortcut="tsb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e1260d1-164b-4810-bdf3-7fd8e642c68f" shortcut="tl.b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="66b73169-3fa0-4c1c-9d0e-93082f60fcfd" shortcut="tl.c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b6a620c-1ee3-4390-bbd7-b8c0c2363939" shortcut="tl.f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c69cb3d5-3f3c-4e41-9b9a-007640483eed" shortcut="tl.by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="142ae02a-e7dc-4c76-855f-0c357bb5317c" shortcut="tl.d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="867b03b7-7fbe-4c24-84ab-2746b1e79a6d" shortcut="tl.i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="983c4fc4-302b-4e10-906f-e205ffa97cae" shortcut="tl.m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="641bdf91-6f51-4d67-ba41-f21d224990b3" shortcut="tl.s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8711a5c-4f77-44c1-933c-45f5a64945bc" shortcut="tl.l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3de5d38d-abf3-499f-acf2-3c18278be0c6" shortcut="tl.u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8a2d64d-1c72-452d-b471-a075f1946cca" shortcut="tl.g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a35b3bb5-2764-4dd5-94e7-f434b1d1b64c" shortcut="tl.t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="059aa34f-686f-430e-9260-0de7a94e856d" shortcut="tl.sb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c89bb2aa-bea3-4d59-a318-c887d22cf1d4" shortcut="th.b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1fac1da0-a7ba-40c4-b2ac-2e631ef332b6" shortcut="th.c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="35d8b30f-a95e-412e-9e29-3ee48e9aa871" shortcut="th.f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4638e567-bf9b-4f27-be66-25be6ebf9ea2" shortcut="th.by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8cf95f62-b48d-47cc-a608-ed08bc034dd1" shortcut="th.d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c3e2c36-cd7a-463a-9c41-d07fec934c0e" shortcut="th.i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="35f96ea4-0f14-440f-bcc0-00e80e58e060" shortcut="th.m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f063488c-d587-44d0-a1ad-b64fb7c68e4d" shortcut="th.s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18c2e488-bbde-49d0-a004-57bab6c8337e" shortcut="th.l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92f6cfd7-9351-4224-bdd0-92462ed89ac9" shortcut="th.u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd4402c3-a458-465d-bf2a-91e05fba749e" shortcut="th.g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8bc6e58a-967a-4935-8b1c-a5ba3a9e73d8" shortcut="th.t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d4877890-a71a-4206-8e3d-4dcd82c5fcff" shortcut="th.sb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74d61528-3ab9-4cb5-b06d-7578c785910d" shortcut="t~b" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eddf2d1c-5970-48b5-a477-e13999a03898" shortcut="t~c" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="67aa5196-2200-4872-9236-1ddf4e5b8393" shortcut="t~f" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="66b92f0f-5ada-47b3-b7b8-fa226a422a9d" shortcut="t~by" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="87942e77-369c-462c-8ea6-63e18b68a303" shortcut="t~d" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a084bcf1-a3db-4885-a3fe-8c2f83bb0059" shortcut="t~i" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31db940e-a5b3-4e61-ac08-00b3b7289c26" shortcut="t~m" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6997d638-8f97-4e3c-8188-330b10f86bf3" shortcut="t~s" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6eff6b3-ad27-435c-9738-715c7792da41" shortcut="t~l" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5448099d-3354-4109-a743-d8f3a7e82331" shortcut="t~u" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="712c1cf5-4d6e-4335-9e8b-42f57bb5ed12" shortcut="t~g" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="89728a2f-a2a6-4362-b860-1d261523418d" shortcut="t~t" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8971d87f-4627-4a42-99fc-24343d59c0a6" shortcut="t~sb" description="A test method." text="[Test] public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="63e2f34a-d304-4a3b-bcec-5d13cce45210" shortcut="m" description="A method that returns a(n) $typename$" text="public void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c8ad26d0-06bb-4bef-9bff-f4c2db86b568" shortcut="mb" description="A method that returns a(n) $typename$" text="public bool $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c81d02c-4d2c-44a9-b235-d45e9795d9f2" shortcut="mc" description="A method that returns a(n) $typename$" text="public char $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2e4702e-2a32-439b-9602-464f908806a6" shortcut="mf" description="A method that returns a(n) $typename$" text="public float $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4946a1f8-bba1-4d71-85cf-93c243b50e95" shortcut="mby" description="A method that returns a(n) $typename$" text="public byte $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ed96d6a-dd39-40ba-bde2-fdbec0ae92f2" shortcut="md" description="A method that returns a(n) $typename$" text="public double $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4775d83-7869-412a-84c4-2415d93b8616" shortcut="mi" description="A method that returns a(n) $typename$" text="public int $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24a1b0d3-01a9-44fe-b854-8e58facbf146" shortcut="mm" description="A method that returns a(n) $typename$" text="public decimal $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42cb855f-ccba-497e-9f2d-3b03e2bb5191" shortcut="ms" description="A method that returns a(n) $typename$" text="public string $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="23d4ddcf-2466-42ad-833e-b9257ec2dadb" shortcut="ml" description="A method that returns a(n) $typename$" text="public long $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f6496314-9055-45bd-9cde-8240023b4128" shortcut="mu" description="A method that returns a(n) $typename$" text="public uint $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92788b9e-b80d-4f54-a71f-0756de80ee02" shortcut="mg" description="A method that returns a(n) $typename$" text="public System.Guid $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7c8c078-42d9-463b-ba48-da5bca18b910" shortcut="mt" description="A method that returns a(n) $typename$" text="public System.DateTime $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01bf5b9e-36e6-4f59-b618-334f00777918" shortcut="msb" description="A method that returns a(n) $typename$" text="public System.Text.StringBuilder $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed50b660-4177-4a58-95d9-9716fb2315b2" shortcut="ml.b" description="A method that returns a(n) System.Collections.Generic.List&lt;bool&gt;" text="public System.Collections.Generic.List&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="25920aea-8b0d-4832-ba76-f8763e183018" shortcut="ml.c" description="A method that returns a(n) System.Collections.Generic.List&lt;char&gt;" text="public System.Collections.Generic.List&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b30289d6-6211-4f7f-a224-95f65e238460" shortcut="ml.f" description="A method that returns a(n) System.Collections.Generic.List&lt;float&gt;" text="public System.Collections.Generic.List&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="389e7e7b-4da1-466b-9bc1-9561dd66f445" shortcut="ml.by" description="A method that returns a(n) System.Collections.Generic.List&lt;byte&gt;" text="public System.Collections.Generic.List&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bdf64f83-c93f-46f6-8d88-4b08a0574c49" shortcut="ml.d" description="A method that returns a(n) System.Collections.Generic.List&lt;double&gt;" text="public System.Collections.Generic.List&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d827c6f3-4135-4803-94b0-e5744407c5d3" shortcut="ml.i" description="A method that returns a(n) System.Collections.Generic.List&lt;int&gt;" text="public System.Collections.Generic.List&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a0940fb-6ea4-4f16-b654-96106540f99e" shortcut="ml.m" description="A method that returns a(n) System.Collections.Generic.List&lt;decimal&gt;" text="public System.Collections.Generic.List&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="32b28abb-6754-4b9f-828a-be500fce1181" shortcut="ml.s" description="A method that returns a(n) System.Collections.Generic.List&lt;string&gt;" text="public System.Collections.Generic.List&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea9bbd1d-5f7d-4f19-a8da-c40148c40ed1" shortcut="ml.l" description="A method that returns a(n) System.Collections.Generic.List&lt;long&gt;" text="public System.Collections.Generic.List&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="31898ebd-db4d-4bc2-88cb-633b9e36f03e" shortcut="ml.u" description="A method that returns a(n) System.Collections.Generic.List&lt;uint&gt;" text="public System.Collections.Generic.List&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b586a139-e536-48b0-834f-85a2e5921e24" shortcut="ml.g" description="A method that returns a(n) System.Collections.Generic.List&lt;System.Guid&gt;" text="public System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0a982514-108f-4ca2-83e9-6952de3092e0" shortcut="ml.t" description="A method that returns a(n) System.Collections.Generic.List&lt;System.DateTime&gt;" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8acb706-c7e5-414c-abc8-c67fafb41aa0" shortcut="ml.sb" description="A method that returns a(n) System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1429556-290a-4916-b161-01546bc322f5" shortcut="mh.b" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;bool&gt;" text="public System.Collections.Generic.HashSet&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1021edca-26a0-46f9-85a7-26f1eff695e7" shortcut="mh.c" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;char&gt;" text="public System.Collections.Generic.HashSet&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="308b95e5-89d8-4bb3-943f-e90addef1b36" shortcut="mh.f" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;float&gt;" text="public System.Collections.Generic.HashSet&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="120369cf-1cba-4503-bde6-e34850d1dd3d" shortcut="mh.by" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;byte&gt;" text="public System.Collections.Generic.HashSet&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4575ee9e-1f6e-4861-8e91-0ce1e9bc1482" shortcut="mh.d" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;double&gt;" text="public System.Collections.Generic.HashSet&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78c74567-578d-4ba7-980d-bc370b9ad11e" shortcut="mh.i" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;int&gt;" text="public System.Collections.Generic.HashSet&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0f100af-2938-48ef-a731-7dc190bf88eb" shortcut="mh.m" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;decimal&gt;" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bfb4ee16-1011-4f89-be33-5de5a9913d6d" shortcut="mh.s" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;string&gt;" text="public System.Collections.Generic.HashSet&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="36a297eb-7182-439a-a396-472bd6642dfe" shortcut="mh.l" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;long&gt;" text="public System.Collections.Generic.HashSet&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1fdd6581-e8d3-464c-9171-d5eb13dcdda8" shortcut="mh.u" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;uint&gt;" text="public System.Collections.Generic.HashSet&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75f9654e-6eeb-4b0c-b0e2-5a43edbfb4af" shortcut="mh.g" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="91b972a5-8779-446a-a994-fe4a17d09531" shortcut="mh.t" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed537084-d212-4cd7-82b5-593d6cb85d58" shortcut="mh.sb" description="A method that returns a(n) System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="db4f400f-befc-4757-8b59-6bc74d2c9a97" shortcut="m~b" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e018be44-7b30-4d68-95ec-812cf6733687" shortcut="m~c" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;char&gt;" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="861731db-20a6-48ef-9afa-dcf872b5ec09" shortcut="m~f" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;float&gt;" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="78f4c892-48b1-49aa-9fb4-9f46a2baa9fb" shortcut="m~by" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="423637eb-2116-411f-ab20-3a29204e63b9" shortcut="m~d" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;double&gt;" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="84d2b949-fd89-45c4-ab56-0bcb161866e7" shortcut="m~i" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;int&gt;" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d66a8ae-4c3b-40ce-a629-35666c0b6f83" shortcut="m~m" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ceabcaee-e657-475f-95ea-243d3cf99372" shortcut="m~s" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;string&gt;" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="22863d0c-5f31-4986-bcb9-5666557b7f06" shortcut="m~l" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;long&gt;" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec87375f-9ae3-421c-b88e-125fd69abed4" shortcut="m~u" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3277bf6f-4037-4b4e-8f22-f1b04b8cc15b" shortcut="m~g" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7d4127e2-0378-4ec1-9812-b2f4a9f50bc1" shortcut="m~t" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30d0bae9-51f1-4831-ad00-914ab3fdf6e0" shortcut="m~sb" description="A method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ad35f50-8a5e-4dda-a88e-dc08f00d4944" shortcut="M" description="A static method that returns a(n) $typename$" text="public static void $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="66a1c5a4-0190-49f7-a1a7-b55e666c3321" shortcut="Mb" description="A static method that returns a(n) $typename$" text="public static bool $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a0611a36-6807-4f8b-9536-c5d4f8197e10" shortcut="Mc" description="A static method that returns a(n) $typename$" text="public static char $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b72e009d-0eb3-43f9-86b2-b3675cc945a1" shortcut="Mf" description="A static method that returns a(n) $typename$" text="public static float $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0e6f169-c07f-4f31-9878-709f0027d6fa" shortcut="Mby" description="A static method that returns a(n) $typename$" text="public static byte $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92b3a428-b4eb-4a1c-b185-135372d2bd81" shortcut="Md" description="A static method that returns a(n) $typename$" text="public static double $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3518ef7c-71f2-4561-9004-eebe9e9442ac" shortcut="Mi" description="A static method that returns a(n) $typename$" text="public static int $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae6176cc-0ef8-4b01-abe7-70fd52ea053b" shortcut="Mm" description="A static method that returns a(n) $typename$" text="public static decimal $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="db796716-d90b-4a24-a1ca-f48c6ac80dd7" shortcut="Ms" description="A static method that returns a(n) $typename$" text="public static string $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="939b1f5c-5f65-40be-a0d0-dfedaa9a0738" shortcut="Ml" description="A static method that returns a(n) $typename$" text="public static long $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c9e3949d-8f1b-4134-a410-619631ace7b9" shortcut="Mu" description="A static method that returns a(n) $typename$" text="public static uint $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d9fa893b-1272-4659-9f20-886c8ed12db6" shortcut="Mg" description="A static method that returns a(n) $typename$" text="public static System.Guid $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="28584400-b64a-4d24-8f89-893805656b50" shortcut="Mt" description="A static method that returns a(n) $typename$" text="public static System.DateTime $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="996c479c-3e4f-477c-8949-e575b45d6ed7" shortcut="Msb" description="A static method that returns a(n) $typename$" text="public static System.Text.StringBuilder $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="33b1f608-167e-4283-be8c-26ebdca9df34" shortcut="Ml.b" description="A static method that returns a(n) System.Collections.Generic.List&lt;bool&gt;" text="public static System.Collections.Generic.List&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4da1ff38-dfad-4dcc-aead-8e27ab96528b" shortcut="Ml.c" description="A static method that returns a(n) System.Collections.Generic.List&lt;char&gt;" text="public static System.Collections.Generic.List&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa77759b-775b-4a31-89aa-5f11f9c8adb1" shortcut="Ml.f" description="A static method that returns a(n) System.Collections.Generic.List&lt;float&gt;" text="public static System.Collections.Generic.List&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="96ff6653-13cf-4f25-8f51-c1e6c07e2bae" shortcut="Ml.by" description="A static method that returns a(n) System.Collections.Generic.List&lt;byte&gt;" text="public static System.Collections.Generic.List&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4b5d23e-f7e6-4f57-bb4e-3d888af5c2f7" shortcut="Ml.d" description="A static method that returns a(n) System.Collections.Generic.List&lt;double&gt;" text="public static System.Collections.Generic.List&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0a99261b-0bcf-493b-b610-c8106782c3ec" shortcut="Ml.i" description="A static method that returns a(n) System.Collections.Generic.List&lt;int&gt;" text="public static System.Collections.Generic.List&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de7d97e2-353c-47f7-a86b-b2d533047faa" shortcut="Ml.m" description="A static method that returns a(n) System.Collections.Generic.List&lt;decimal&gt;" text="public static System.Collections.Generic.List&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4809540a-62b4-4b57-a48c-1eec012dc0ba" shortcut="Ml.s" description="A static method that returns a(n) System.Collections.Generic.List&lt;string&gt;" text="public static System.Collections.Generic.List&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6507eae4-0e83-4cf4-a62a-b49086e07f32" shortcut="Ml.l" description="A static method that returns a(n) System.Collections.Generic.List&lt;long&gt;" text="public static System.Collections.Generic.List&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e4aefe53-a2a8-44c4-9245-3460cc40f897" shortcut="Ml.u" description="A static method that returns a(n) System.Collections.Generic.List&lt;uint&gt;" text="public static System.Collections.Generic.List&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd73b056-6572-4387-b2dd-201f00a4917c" shortcut="Ml.g" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.Guid&gt;" text="public static System.Collections.Generic.List&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c74a8783-40e6-4bb3-8179-6ca43009defa" shortcut="Ml.t" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.DateTime&gt;" text="public static System.Collections.Generic.List&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e9898d40-73ae-4989-8d1a-a26c30b057b2" shortcut="Ml.sb" description="A static method that returns a(n) System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="public static System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e080f4e5-d77c-4694-b676-40ae0b0f4ef1" shortcut="Mh.b" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;bool&gt;" text="public static System.Collections.Generic.HashSet&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75eeab88-b211-407e-a415-eaccef43de2c" shortcut="Mh.c" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;char&gt;" text="public static System.Collections.Generic.HashSet&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1bfc9117-16f4-4983-9953-e4bfae402827" shortcut="Mh.f" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;float&gt;" text="public static System.Collections.Generic.HashSet&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="affeec2c-dd3a-4c99-8235-f6375d47feff" shortcut="Mh.by" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;byte&gt;" text="public static System.Collections.Generic.HashSet&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="651fb240-8168-45fc-af8b-d9f10fdbd9ee" shortcut="Mh.d" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;double&gt;" text="public static System.Collections.Generic.HashSet&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0ea4b91-e09f-4a79-b73d-a051c3710e76" shortcut="Mh.i" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;int&gt;" text="public static System.Collections.Generic.HashSet&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="948a0f3a-e765-4679-85a7-7959ba9352f9" shortcut="Mh.m" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;decimal&gt;" text="public static System.Collections.Generic.HashSet&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4fa6de90-1683-4a6f-bb03-43b7eba8fa00" shortcut="Mh.s" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;string&gt;" text="public static System.Collections.Generic.HashSet&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b54ffa4a-7d54-4d39-a91d-13cf1650f2dc" shortcut="Mh.l" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;long&gt;" text="public static System.Collections.Generic.HashSet&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2011cb2-c690-4059-891f-4323d4b7efc3" shortcut="Mh.u" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;uint&gt;" text="public static System.Collections.Generic.HashSet&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39c4ac4e-46b1-4efd-bf90-6deb97b14a9a" shortcut="Mh.g" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public static System.Collections.Generic.HashSet&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="491df699-db09-4682-a2be-2bca25c4c070" shortcut="Mh.t" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public static System.Collections.Generic.HashSet&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f0cfb41-91c9-4f7a-ae3d-80c66ea3beb4" shortcut="Mh.sb" description="A static method that returns a(n) System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="public static System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="268bcd7d-a999-448c-a53a-332ca2ce74ca" shortcut="M~b" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public static System.Collections.Generic.IEnumerable&lt;bool&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="59c00806-4ee7-46e1-a683-546fbb549232" shortcut="M~c" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;char&gt;" text="public static System.Collections.Generic.IEnumerable&lt;char&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e90795b3-b798-48ec-94a2-ecb9ff7de439" shortcut="M~f" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;float&gt;" text="public static System.Collections.Generic.IEnumerable&lt;float&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="adb4c71a-354b-4514-a34b-6e7fb01c8e11" shortcut="M~by" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public static System.Collections.Generic.IEnumerable&lt;byte&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5356da13-335e-4d7f-be94-a2de63ad690f" shortcut="M~d" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;double&gt;" text="public static System.Collections.Generic.IEnumerable&lt;double&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="80d2e41d-ed6d-4026-8b5e-1109ef4871b6" shortcut="M~i" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;int&gt;" text="public static System.Collections.Generic.IEnumerable&lt;int&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d8c585c2-b062-41e6-b3ce-8a8b706f9cf0" shortcut="M~m" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public static System.Collections.Generic.IEnumerable&lt;decimal&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="202d5903-5b0e-4b33-b6aa-0fcf8e8c3eae" shortcut="M~s" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;string&gt;" text="public static System.Collections.Generic.IEnumerable&lt;string&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="822b01ae-5987-43c8-b8c2-24e8843261c5" shortcut="M~l" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;long&gt;" text="public static System.Collections.Generic.IEnumerable&lt;long&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba517321-71e3-4f01-ba01-6fa05bdfb1d4" shortcut="M~u" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public static System.Collections.Generic.IEnumerable&lt;uint&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2c4ba3ac-b37c-4fe5-88a7-dc51b4044cdc" shortcut="M~g" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e8cd2c5c-027c-42a7-b76f-1ed94cb18000" shortcut="M~t" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1bef1f9-beaf-4e12-b952-968fb14a672f" shortcut="M~sb" description="A static method that returns a(n) System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="public static System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $methodname$(){$END$}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;MyMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c14c7f48-3c8e-4659-96c9-b342fec1bfaa" shortcut="pb" description="An automatic property of type $typename$" text="public bool $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="edc75089-4036-4b82-ab65-f6af269844ef" shortcut="pc" description="An automatic property of type $typename$" text="public char $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="38d06482-0e6f-4482-8b64-a14c638ff886" shortcut="pf" description="An automatic property of type $typename$" text="public float $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ee7ddc28-1bba-457c-a474-ffeac93e0787" shortcut="pby" description="An automatic property of type $typename$" text="public byte $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74692df9-9bf1-4292-a6e2-e69543c49837" shortcut="pd" description="An automatic property of type $typename$" text="public double $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="10525e93-c34d-4fe9-9249-d9667916d7f8" shortcut="pi" description="An automatic property of type $typename$" text="public int $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2df6d93-97a5-49a6-8f17-59e314030f60" shortcut="pm" description="An automatic property of type $typename$" text="public decimal $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6e83802-c66c-4590-a182-4cefb0ccde94" shortcut="ps" description="An automatic property of type $typename$" text="public string $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cb9ecb9f-853e-4563-9d5e-67bbad0480e2" shortcut="pl" description="An automatic property of type $typename$" text="public long $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c27c7850-3a67-488a-b936-1064929781f8" shortcut="pu" description="An automatic property of type $typename$" text="public uint $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9acf5276-6da4-4fd7-bb6c-e3a4f291e7b3" shortcut="pg" description="An automatic property of type $typename$" text="public System.Guid $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7c7daa3-77af-4e0e-86d7-43fd3395ea2e" shortcut="pt" description="An automatic property of type $typename$" text="public System.DateTime $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="66af7a09-fd47-4426-980e-024b168b0675" shortcut="psb" description="An automatic property of type $typename$" text="public System.Text.StringBuilder $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="829ddec3-bb8f-4862-b6ae-a0299b189673" shortcut="pl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt;" text="public System.Collections.Generic.List&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd59d8e7-7305-4b8b-9c5e-833da1b9e450" shortcut="pl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt;" text="public System.Collections.Generic.List&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec5e9be6-a9f5-4e19-9554-68a863b1b1bf" shortcut="pl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt;" text="public System.Collections.Generic.List&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9daec3b2-0eed-4475-82b7-8ed87c23ed16" shortcut="pl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt;" text="public System.Collections.Generic.List&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e0872d4-beda-4c3d-84d2-58f2daf65549" shortcut="pl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt;" text="public System.Collections.Generic.List&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a6d9d5de-bf69-4a23-a10a-f9df55341f42" shortcut="pl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt;" text="public System.Collections.Generic.List&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2924f04-1479-4dd4-b14d-376970ac1c1f" shortcut="pl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt;" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55358f01-f32b-408d-802e-f073fd362573" shortcut="pl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt;" text="public System.Collections.Generic.List&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec88764f-84bf-4e30-aabe-56f4de5b286b" shortcut="pl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt;" text="public System.Collections.Generic.List&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62771e9a-757c-4e70-964a-896f8e7edfeb" shortcut="pl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt;" text="public System.Collections.Generic.List&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b5da9e4d-c845-4675-ae89-a4123699fbad" shortcut="pl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt;" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d37cccc-3b73-4bdc-8906-ce6309bfd2d8" shortcut="pl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt;" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="85d254af-13b5-493a-ab5c-8012fb6f7d1c" shortcut="pl.sb" description="An automatic property of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c211077c-c251-44a2-bc31-1a6aa870e2c8" shortcut="ph.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt;" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c9be5c9e-b156-4bf5-afec-d01c9890c5b3" shortcut="ph.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt;" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2d64be1-5ce9-4fa5-94c8-b90e2acb9028" shortcut="ph.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt;" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="da87ae20-cda3-45ba-9d44-366106507b7c" shortcut="ph.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt;" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7a6ba7e-5f1b-4186-9b2e-76d7978a9245" shortcut="ph.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt;" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ea2ea6e5-49fd-48bf-9c20-2554a9c1fe9b" shortcut="ph.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt;" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ab4597e2-2cf5-4b0d-bb84-b5b9bf9da930" shortcut="ph.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt;" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="793ddd21-9386-445c-a2c3-16845192f539" shortcut="ph.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt;" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f87fbf32-2557-43ea-b514-256fae4493df" shortcut="ph.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt;" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="206b5c0d-c95e-4c3b-a371-ec29fa1581f6" shortcut="ph.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt;" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b0143d1-23ec-410f-ac35-4df92003727b" shortcut="ph.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt;" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f89ea68-b71e-4607-9039-e5623a969b45" shortcut="ph.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt;" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="579ee454-d7c6-44ec-92a2-198a3606d8ea" shortcut="ph.sb" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ae90aa1-dfd5-499d-8153-ebc3f94a7ec5" shortcut="p~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt;" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="70b03f7a-d8b9-48f0-992c-e2967bbf72a6" shortcut="p~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt;" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a1b3955e-2570-4287-8ec6-85e8b4f1277a" shortcut="p~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt;" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="faa92653-11d1-4a27-baa6-d2f87a3c0dec" shortcut="p~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt;" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79f74fda-3685-4776-95ff-18e965283be2" shortcut="p~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt;" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2dd7db4f-6939-4c34-9177-69b5dda3d9cb" shortcut="p~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt;" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3c3cac4b-0029-44a4-98b9-6056333e23a0" shortcut="p~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt;" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cc5ce613-ef05-4974-941c-7cbe5fc41b50" shortcut="p~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt;" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="35670f77-1d65-4616-9daf-6ba2a751e817" shortcut="p~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt;" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5998256e-5614-46cf-a08c-6d4bc1a4363a" shortcut="p~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt;" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ae884f3-ac3f-4758-8fa3-d95ad046d320" shortcut="p~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="575ebd2f-112f-4768-89e5-0de7250610fd" shortcut="p~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a912dd37-c21a-4e49-a709-7041a725d664" shortcut="p~sb" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt;" text="public System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $propname${ get; set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="88604ef2-9a30-4700-85d9-6882f4a51162" shortcut="prb" description="An automatic property of type $typename$ with a private setter" text="public bool $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="01357660-2226-4d17-a3d4-2d3a359a3fd9" shortcut="prc" description="An automatic property of type $typename$ with a private setter" text="public char $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d0da637-91c4-4fcb-8a23-7b67d7ea8c68" shortcut="prf" description="An automatic property of type $typename$ with a private setter" text="public float $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d964a4e-3d83-4390-bb4f-358bc3e22c9d" shortcut="prby" description="An automatic property of type $typename$ with a private setter" text="public byte $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b96ded98-c6e4-4e42-b59a-bf6d78ebdf80" shortcut="prd" description="An automatic property of type $typename$ with a private setter" text="public double $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7d9fad77-e729-48ce-8891-bbe7a950f4ad" shortcut="pri" description="An automatic property of type $typename$ with a private setter" text="public int $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="968e46c1-0638-43c1-bd3f-3291b0ffb22a" shortcut="prm" description="An automatic property of type $typename$ with a private setter" text="public decimal $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21711705-8021-47a1-919c-f8b52ab2b14d" shortcut="prs" description="An automatic property of type $typename$ with a private setter" text="public string $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f3cda75-6872-45c2-b54a-7dea470dc397" shortcut="prl" description="An automatic property of type $typename$ with a private setter" text="public long $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8cf8c46-e7e8-42d6-8230-63e3ed9f1931" shortcut="pru" description="An automatic property of type $typename$ with a private setter" text="public uint $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c95bac6f-207f-48ee-bef1-23fda84e2c7c" shortcut="prg" description="An automatic property of type $typename$ with a private setter" text="public System.Guid $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3687f64e-3c71-4ed8-9883-e56987679e5d" shortcut="prt" description="An automatic property of type $typename$ with a private setter" text="public System.DateTime $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39b0e330-7c64-4dc8-843c-f1456417e73f" shortcut="prsb" description="An automatic property of type $typename$ with a private setter" text="public System.Text.StringBuilder $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="545b24c8-c9a6-4f52-98e0-e58d2c8d01c2" shortcut="prl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt; with a private setter" text="public System.Collections.Generic.List&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e54a0ff5-f701-44de-9a68-88fac0469092" shortcut="prl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt; with a private setter" text="public System.Collections.Generic.List&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5cdfb5c2-21c1-435b-8e45-7610302a3755" shortcut="prl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt; with a private setter" text="public System.Collections.Generic.List&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c11c3e80-cc31-4106-b6fc-cab29faa2ee0" shortcut="prl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt; with a private setter" text="public System.Collections.Generic.List&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d41a25bd-db75-4e9a-bc44-2ea25ce1226e" shortcut="prl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt; with a private setter" text="public System.Collections.Generic.List&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d979d495-4edf-4011-ba46-906125e33636" shortcut="prl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt; with a private setter" text="public System.Collections.Generic.List&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c3e11948-e0dc-4c58-9df2-5bcc177fb432" shortcut="prl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a603d3d6-3e22-4095-93e4-33b000d62ffb" shortcut="prl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt; with a private setter" text="public System.Collections.Generic.List&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0202c29e-b329-49ac-bd19-af6284962bf6" shortcut="prl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt; with a private setter" text="public System.Collections.Generic.List&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4f198406-88dd-4e31-a79c-bc4b9013ec82" shortcut="prl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt; with a private setter" text="public System.Collections.Generic.List&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9e6fdcbe-093d-4dbc-9f46-5d559bd12981" shortcut="prl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="571b36ff-67a3-4788-a8a1-573cb855f7e0" shortcut="prl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="09e979f8-5d2b-4feb-8722-b0da62927588" shortcut="prl.sb" description="An automatic property of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; with a private setter" text="public System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75ce101c-d29e-4d1a-8fb8-95640f4c229c" shortcut="prh.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6e2b6ba7-1855-4c5c-9f1d-15a643da4df9" shortcut="prh.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7447a615-0e86-4a6b-ab0f-7469781e15bc" shortcut="prh.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0071a06f-94fd-41de-ac58-b97f047d0b78" shortcut="prh.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="db46b77a-275e-4562-91e9-22e7e69a3638" shortcut="prh.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c2a6f34c-9806-429a-9fe1-f22221654d9c" shortcut="prh.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b164b7aa-78ed-4b1f-998a-454bfe93d600" shortcut="prh.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3e81eb29-2ae1-4fe5-890c-558468a7b616" shortcut="prh.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7af9d69-3aca-484f-a587-454364835fd0" shortcut="prh.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d40fafd-baf2-4bf5-b4fe-4e1fc7522326" shortcut="prh.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="87318792-6f97-41ea-b9c0-6f77d100a04d" shortcut="prh.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8c309689-ec3c-474a-968e-cdb2d802e84a" shortcut="prh.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d436029a-58c4-4a8b-a221-7a18d3ba369f" shortcut="prh.sb" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; with a private setter" text="public System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4cb4e22d-93ff-4a51-a514-302e5db5b60d" shortcut="pr~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="06cf2b83-805b-4dec-8b6b-c16ae417bcb7" shortcut="pr~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="807d152f-4baa-42f0-ae1c-5e53c13704f8" shortcut="pr~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ace42a1f-826d-4a20-983f-f9362fbcddfe" shortcut="pr~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f7f02f11-1200-40db-8f11-65c9a3b12297" shortcut="pr~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e7710663-19e8-4653-97a7-86500d905649" shortcut="pr~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f4a95898-3e50-4c9c-9236-2babbe969bfa" shortcut="pr~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a1b46458-7cfe-4f19-9e38-974350da8b05" shortcut="pr~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2a243c86-5a5b-423e-9cf1-25104ad635a3" shortcut="pr~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="27a8f1fa-5be3-4875-a25a-13396d3a4414" shortcut="pr~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55e88507-7e8e-4e20-84fe-24481c31ebf4" shortcut="pr~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae5bf0c4-9557-4ac8-b7f1-15622577b664" shortcut="pr~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0efee072-576f-4777-be43-0bdc0a12539c" shortcut="pr~sb" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; with a private setter" text="public System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $propname${ get; private set; }$END$" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e377be10-676b-4160-a076-d5d20eb35b99" shortcut="pgb" description="An automatic property of type $typename$ with an empty getter and no setter" text="public bool $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e92ffd77-b5f8-44cb-b935-50747304739b" shortcut="pgc" description="An automatic property of type $typename$ with an empty getter and no setter" text="public char $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f4d3f655-25ec-49f7-a6f2-a87f9edfdd3b" shortcut="pgf" description="An automatic property of type $typename$ with an empty getter and no setter" text="public float $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40f8e0fc-1e7e-4326-8b01-9873ad2adb4a" shortcut="pgby" description="An automatic property of type $typename$ with an empty getter and no setter" text="public byte $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74c2001a-6e20-4ea7-8435-fde67f8cea97" shortcut="pgd" description="An automatic property of type $typename$ with an empty getter and no setter" text="public double $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cf51c539-6e36-4b5c-a70b-f048d640661a" shortcut="pgi" description="An automatic property of type $typename$ with an empty getter and no setter" text="public int $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="871e086b-6c15-4e92-9a2d-db16c7f8352f" shortcut="pgm" description="An automatic property of type $typename$ with an empty getter and no setter" text="public decimal $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81c8f7c9-9c17-4c4b-8591-64c9b04eab48" shortcut="pgs" description="An automatic property of type $typename$ with an empty getter and no setter" text="public string $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79dd857d-408b-4411-b0ff-aadfa05abbf8" shortcut="pgl" description="An automatic property of type $typename$ with an empty getter and no setter" text="public long $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d47d406-c6de-48e7-9b61-56145aacc4fa" shortcut="pgu" description="An automatic property of type $typename$ with an empty getter and no setter" text="public uint $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="950adced-c2dd-4c83-acc0-6765f465898d" shortcut="pgg" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.Guid $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c9db427b-4031-4f59-945f-e58b7b1dfd9c" shortcut="pgt" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.DateTime $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7300a03f-33b4-4c53-bb89-0867af2238d4" shortcut="pgsb" description="An automatic property of type $typename$ with an empty getter and no setter" text="public System.Text.StringBuilder $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62b16eec-e4aa-43ef-a9ee-9d395a5ac5ac" shortcut="pgl.b" description="An automatic property of type System.Collections.Generic.List&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f405cd30-11b1-42a4-a3cf-c16ed1d1374d" shortcut="pgl.c" description="An automatic property of type System.Collections.Generic.List&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8f692ef3-e7b1-438d-aac8-56f65ef99cf2" shortcut="pgl.f" description="An automatic property of type System.Collections.Generic.List&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fad50116-c230-49f7-a83d-919785c81f96" shortcut="pgl.by" description="An automatic property of type System.Collections.Generic.List&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a7210e9-4d13-4eb1-90a5-1f9fdaa4d80d" shortcut="pgl.d" description="An automatic property of type System.Collections.Generic.List&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2515920e-fcea-4e3b-866b-4f115f069778" shortcut="pgl.i" description="An automatic property of type System.Collections.Generic.List&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7bd77a89-9952-4995-8df3-34411e4f156b" shortcut="pgl.m" description="An automatic property of type System.Collections.Generic.List&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b24ade9e-5cb6-4f89-8b9e-7bd73efa4d40" shortcut="pgl.s" description="An automatic property of type System.Collections.Generic.List&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0503637c-b9f2-4011-9e03-f832a6b543e4" shortcut="pgl.l" description="An automatic property of type System.Collections.Generic.List&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e84d7df-4277-428d-b27d-f6fbe1137de5" shortcut="pgl.u" description="An automatic property of type System.Collections.Generic.List&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f07b32fd-ba91-4982-92c0-17ee0feaf17c" shortcut="pgl.g" description="An automatic property of type System.Collections.Generic.List&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1dab9ae7-d6fc-4d50-a611-c9242200593d" shortcut="pgl.t" description="An automatic property of type System.Collections.Generic.List&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="568cdf68-caf5-4666-861b-c4d59c9f4126" shortcut="pgl.sb" description="An automatic property of type System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; with an empty getter and no setter" text="public System.Collections.Generic.List&lt;System.Text.StringBuilder&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d777262-77e5-410e-ba14-ca49f76ce3c8" shortcut="pgh.b" description="An automatic property of type System.Collections.Generic.HashSet&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a2bba3e-eea2-4766-b9c1-addbdb538b90" shortcut="pgh.c" description="An automatic property of type System.Collections.Generic.HashSet&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="65170268-bc5c-4184-94e2-f2e86553464c" shortcut="pgh.f" description="An automatic property of type System.Collections.Generic.HashSet&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12e36764-97c0-4be8-a9b4-db2e1d5cc726" shortcut="pgh.by" description="An automatic property of type System.Collections.Generic.HashSet&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c3e8e85-c9f2-41d5-b0c6-a9ceee4cef19" shortcut="pgh.d" description="An automatic property of type System.Collections.Generic.HashSet&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4761db7f-4df9-46fc-be0d-7dd8b8663083" shortcut="pgh.i" description="An automatic property of type System.Collections.Generic.HashSet&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="83404375-7717-457f-96a6-56d498001858" shortcut="pgh.m" description="An automatic property of type System.Collections.Generic.HashSet&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="353d7aff-7cf2-488c-a262-49c78a58bfcf" shortcut="pgh.s" description="An automatic property of type System.Collections.Generic.HashSet&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9074c526-6a7d-4663-9164-b58759b57e4e" shortcut="pgh.l" description="An automatic property of type System.Collections.Generic.HashSet&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2765651c-181c-4514-bb68-429709234afb" shortcut="pgh.u" description="An automatic property of type System.Collections.Generic.HashSet&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="94b15c11-91cc-477c-819b-74ce3dfd4699" shortcut="pgh.g" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fe2fbe66-6eee-4eb5-a591-f429bbb9b77b" shortcut="pgh.t" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3868f206-e989-4694-bca2-cede53bceb0e" shortcut="pgh.sb" description="An automatic property of type System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; with an empty getter and no setter" text="public System.Collections.Generic.HashSet&lt;System.Text.StringBuilder&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="601c464c-e80b-4e0d-b673-aab6001286d2" shortcut="pg~b" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;bool&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;bool&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="130d6724-911e-47c1-b701-0f823b866452" shortcut="pg~c" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;char&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;char&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="33dc4503-dc18-451e-ad99-eeddd0779fa0" shortcut="pg~f" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;float&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;float&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bb5c9a68-76b1-40b0-8b1d-e79560a8d175" shortcut="pg~by" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;byte&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;byte&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="960ac945-2864-4f4e-929b-83c7ebb19116" shortcut="pg~d" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;double&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;double&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="52d1323e-1d96-4a60-9c1e-1cd2e7f300f5" shortcut="pg~i" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;int&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;int&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d72d95c-016f-4bd0-bd03-0da3d86f0f6b" shortcut="pg~m" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;decimal&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;decimal&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0133d8ba-e936-4909-b3e1-5bd836ab3ba0" shortcut="pg~s" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;string&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;string&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="be2f1e1b-bcc7-4852-8888-0d6b920ae99f" shortcut="pg~l" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;long&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;long&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d9fb5bff-881b-4594-a45f-37ee2f882985" shortcut="pg~u" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;uint&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;uint&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="544dc4d6-ccc2-4401-81a1-42062113f991" shortcut="pg~g" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Guid&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.Guid&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2e3d345-ce6b-423c-b0d9-2827982cdef4" shortcut="pg~t" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.DateTime&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d4ca732-d47d-4571-8411-5d55a925d01c" shortcut="pg~sb" description="An automatic property of type System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; with an empty getter and no setter" text="public System.Collections.Generic.IEnumerable&lt;System.Text.StringBuilder&gt; $propname${get {$END$}}" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <CSharpContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;MyProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6231777a-abc6-44b0-8dba-8d688266768f" shortcut="vb" description="A field of type $typename$" text="Private $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="52aca1eb-6f9b-4a5a-ba46-79a3510dfa3e" shortcut="vc" description="A field of type $typename$" text="Private $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0b5172c2-781e-453f-b27f-2e94d96fe876" shortcut="vf" description="A field of type $typename$" text="Private $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aed1aa47-6716-48ae-826c-d1419b8832fd" shortcut="vby" description="A field of type $typename$" text="Private $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ea992ec-6e26-4637-95e7-73bb2f1777fc" shortcut="vd" description="A field of type $typename$" text="Private $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="81ad9429-6574-4503-85a9-e23d343ef888" shortcut="vi" description="A field of type $typename$" text="Private $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="21174f85-c78f-4cb4-8e3b-0436ad529ca4" shortcut="vm" description="A field of type $typename$" text="Private $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b13569ca-d486-4535-82c1-3af8b7f3b222" shortcut="vs" description="A field of type $typename$" text="Private $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1019c6dd-d8c3-4020-b0c6-f21ffc2c958d" shortcut="vl" description="A field of type $typename$" text="Private $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7755894c-a6d5-47a1-b4b1-34af5af8a98b" shortcut="vu" description="A field of type $typename$" text="Private $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="336fe635-d6a5-44e6-9c94-6988d92a7075" shortcut="vg" description="A field of type $typename$" text="Private $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c2345737-0821-411d-994e-fcf62f69e7a7" shortcut="vt" description="A field of type $typename$" text="Private $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="54fb4dc7-1d5c-4d4c-ae21-251a29dfac27" shortcut="vl.b" description="A field of type System.Collections.Generic.List(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a6368d73-8ac9-4a9c-b12b-285afc28b9dd" shortcut="vl.c" description="A field of type System.Collections.Generic.List(Of Char)" text="Private $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ec467e2a-17ad-43b4-89c7-6ca0c84a529c" shortcut="vl.f" description="A field of type System.Collections.Generic.List(Of Single)" text="Private $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b2458f4c-8a44-4939-88dd-b516fd438d35" shortcut="vl.by" description="A field of type System.Collections.Generic.List(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="52e15489-28b3-449c-bccd-bf97355f33ba" shortcut="vl.d" description="A field of type System.Collections.Generic.List(Of Double)" text="Private $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4dc753c3-4721-4d0f-813f-eaa83763d99d" shortcut="vl.i" description="A field of type System.Collections.Generic.List(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1ed1617-a064-4377-b7e2-a131c5f58588" shortcut="vl.m" description="A field of type System.Collections.Generic.List(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c51ce012-ac7e-4b20-9552-c7637f1552be" shortcut="vl.s" description="A field of type System.Collections.Generic.List(Of String)" text="Private $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3cd2e2ba-e64c-42d4-a6e3-1cc4b3a97597" shortcut="vl.l" description="A field of type System.Collections.Generic.List(Of Long)" text="Private $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4163dbb-25f2-451f-a383-f4a64d4afc21" shortcut="vl.u" description="A field of type System.Collections.Generic.List(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74e84e42-7e89-46e8-9664-ccae0b0e865e" shortcut="vl.g" description="A field of type System.Collections.Generic.List(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="508b4bae-c758-4f67-82c2-b9202e2a4c4b" shortcut="vl.t" description="A field of type System.Collections.Generic.List(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9e9140f8-8b91-43aa-9b9f-04e93ce081e6" shortcut="vh.b" description="A field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8a5c229-931d-4b15-b7f5-d136b92264f2" shortcut="vh.c" description="A field of type System.Collections.Generic.HashSet(Of Char)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e1255983-a5ff-4741-8db1-c3f419f6a26b" shortcut="vh.f" description="A field of type System.Collections.Generic.HashSet(Of Single)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="86008db2-7ff2-4e64-9fc0-346cb1cd55eb" shortcut="vh.by" description="A field of type System.Collections.Generic.HashSet(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="07f78797-a13b-4bd3-bc9d-2cead5867a1c" shortcut="vh.d" description="A field of type System.Collections.Generic.HashSet(Of Double)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="718aaaa9-fe62-4c81-a188-cd442b7128e0" shortcut="vh.i" description="A field of type System.Collections.Generic.HashSet(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3cf79731-071f-4f16-8df7-ba00c05c2ee2" shortcut="vh.m" description="A field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a7b759d9-84f1-4d32-b25e-96a5a80a6f7f" shortcut="vh.s" description="A field of type System.Collections.Generic.HashSet(Of String)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="27f24088-7055-4971-b2d5-b663c8d63aa8" shortcut="vh.l" description="A field of type System.Collections.Generic.HashSet(Of Long)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c68535d-c504-450a-82e6-426652e9a97d" shortcut="vh.u" description="A field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ca51274-cc4f-4e3a-8ac3-c905ebb09815" shortcut="vh.g" description="A field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dcfb4d97-ebfa-44b1-8eef-c90ae690a186" shortcut="vh.t" description="A field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b58f029-a4bb-4d81-8f23-1a5e4bf76bbc" shortcut="v~b" description="A field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e82af5c7-cd81-4c56-a61b-493aade6da5f" shortcut="v~c" description="A field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0edd42b-2658-426c-a670-b9a936aa99a5" shortcut="v~f" description="A field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0ff143bb-c172-4bc0-9818-f63ef19c3fbb" shortcut="v~by" description="A field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e0f3c3f-93c9-49c3-8c0c-f98b5fc44cc2" shortcut="v~d" description="A field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="798d8ed7-77bd-4b86-87c1-d47b56d939d8" shortcut="v~i" description="A field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0109186c-b09a-4fb1-90c0-cb9678b7a87d" shortcut="v~m" description="A field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4192d468-8bab-4fbf-ad67-cd1ac333f7d1" shortcut="v~s" description="A field of type System.Collections.Generic.IEnumerable(Of String)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3ce92dfa-2a66-443d-b7b5-a566bbf48ed4" shortcut="v~l" description="A field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3412e25-d4fa-428d-8914-4e7fc3054bd2" shortcut="v~u" description="A field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7242c37a-e76c-44ff-b455-52a62a01e7cc" shortcut="v~g" description="A field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="51dfa2e6-f67e-49e4-bc06-af94cf3b23f6" shortcut="v~t" description="A field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f32b5588-8530-4857-869c-85af923e1a3f" shortcut="vrb" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="79b05b12-6886-48f8-995c-abb77e99e7e6" shortcut="vrc" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4be6167c-f025-453e-96c2-55446b490225" shortcut="vrf" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e00a9516-28d0-4893-9262-3c1efe2f2b17" shortcut="vrby" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="118167ba-38d3-4042-8cbd-0fe114224f6d" shortcut="vrd" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2018eef-ac12-41b2-81da-74b858fc0bec" shortcut="vri" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="76290ce2-9263-48ab-a273-f72d2f4097db" shortcut="vrm" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b133284f-eb8f-40a1-bf5b-315b21c40488" shortcut="vrs" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="14e7db77-547f-40e2-9750-8ef296eddba5" shortcut="vrl" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="430df39f-b3b7-415a-912e-5b66ae6c5de4" shortcut="vru" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18058b3a-220c-475b-9e9b-e86ee675afb8" shortcut="vrg" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ff6c7371-8674-42d8-9e1d-72053b45e445" shortcut="vrt" description="A readonly field of type $typename$" text="Private ReadOnly $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d989f3f-e5b3-4395-927a-1a77a20e7076" shortcut="vrl.b" description="A readonly field of type System.Collections.Generic.List(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ecd8bcf-51d0-4bb2-a8ba-46ad066f2054" shortcut="vrl.c" description="A readonly field of type System.Collections.Generic.List(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="486fabd8-7904-4c28-af43-7e933b13cbb8" shortcut="vrl.f" description="A readonly field of type System.Collections.Generic.List(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d94b17d-0551-4d13-a9b2-ceec51df1b0f" shortcut="vrl.by" description="A readonly field of type System.Collections.Generic.List(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1bdfdc1a-f713-4472-bff6-6f04be91fb68" shortcut="vrl.d" description="A readonly field of type System.Collections.Generic.List(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b99dc84-a8a3-46d4-a859-2e1f552073e5" shortcut="vrl.i" description="A readonly field of type System.Collections.Generic.List(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3aba14c-cbe5-41e8-9522-0e6e6bf9be38" shortcut="vrl.m" description="A readonly field of type System.Collections.Generic.List(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0c08c28e-c964-4b8b-b5de-035c916b2dbc" shortcut="vrl.s" description="A readonly field of type System.Collections.Generic.List(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="064296ce-6c1c-4485-9934-922d17881b28" shortcut="vrl.l" description="A readonly field of type System.Collections.Generic.List(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="acdc98d6-ec2d-42dd-bb0c-0f7ca25d3235" shortcut="vrl.u" description="A readonly field of type System.Collections.Generic.List(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f6647529-b81c-4d22-80c7-3c72f6dc0bdc" shortcut="vrl.g" description="A readonly field of type System.Collections.Generic.List(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd939066-89ff-4d3c-968d-290cfa9cdae6" shortcut="vrl.t" description="A readonly field of type System.Collections.Generic.List(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c0f6a629-9952-4ee8-ba36-9e93df65ae2e" shortcut="vrh.b" description="A readonly field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73f6b059-efa7-4594-953f-4123ff74dd05" shortcut="vrh.c" description="A readonly field of type System.Collections.Generic.HashSet(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b587c96-b43e-496d-9481-a1d4f8a7eeb6" shortcut="vrh.f" description="A readonly field of type System.Collections.Generic.HashSet(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5f34d5a9-e50b-41ed-9325-df1b2b159af3" shortcut="vrh.by" description="A readonly field of type System.Collections.Generic.HashSet(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d2e56f2d-299e-4306-a429-d5e09c275470" shortcut="vrh.d" description="A readonly field of type System.Collections.Generic.HashSet(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9f214802-c28b-48cd-b262-4990f0c50f62" shortcut="vrh.i" description="A readonly field of type System.Collections.Generic.HashSet(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7e4f349-a022-4e03-beee-50ee733c6a35" shortcut="vrh.m" description="A readonly field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7d028646-9090-4cf7-9c85-7bff28b09e4f" shortcut="vrh.s" description="A readonly field of type System.Collections.Generic.HashSet(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8d36f56b-e6b8-4a0b-bd76-b512e862df1a" shortcut="vrh.l" description="A readonly field of type System.Collections.Generic.HashSet(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39a87ecf-bc16-4110-b951-1c02d9622a1b" shortcut="vrh.u" description="A readonly field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37250833-3b87-42c9-b22c-d8aff95b9793" shortcut="vrh.g" description="A readonly field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ff904a78-40dd-4819-ae9a-d6f7f0e0f251" shortcut="vrh.t" description="A readonly field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="524a4d8f-aa84-42fa-b2e5-3c8e2f005561" shortcut="vr~b" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d96a8e21-74d0-4d22-a9c1-20173fb98b15" shortcut="vr~c" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="319be779-38f4-4d72-95ca-8d79354f5eeb" shortcut="vr~f" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2aa37cf6-de34-456e-9ccc-d076cec64562" shortcut="vr~by" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4cf46a36-b93e-4b2e-95d0-4b8ddd47eb4b" shortcut="vr~d" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3466ef6-4656-404e-9d48-6a0286c2d6a1" shortcut="vr~i" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e8d6fde3-e83f-4e05-9c11-08327b4b95d3" shortcut="vr~m" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08edb59d-82e7-427d-bfb6-bd16e727be04" shortcut="vr~s" description="A readonly field of type System.Collections.Generic.IEnumerable(Of String)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1bed3e0d-d004-4f20-a613-05615e98bf3a" shortcut="vr~l" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="414eabe5-9bdc-42da-aeab-e3bd93ea0771" shortcut="vr~u" description="A readonly field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="af605b71-dfdc-42df-9570-221555af4c9c" shortcut="vr~g" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd00dad9-e99d-43a8-bcb5-d25b51e83d75" shortcut="vr~t" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08897876-79a9-4221-90f6-ad45c7e2c3b1" shortcut="Vb" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="df7d61ea-ace0-4936-9ca5-f070014a252b" shortcut="Vc" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c4b7065-0822-45f6-8c00-61b510c6426f" shortcut="Vf" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b42761e6-47d6-40bd-858e-ddb6362d0058" shortcut="Vby" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c66c23d1-b90e-4cf7-9646-ac66202baf31" shortcut="Vd" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="77c5a46d-57fc-47b3-b06e-86a1c32c3bfc" shortcut="Vi" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ed9c63c-6584-4e99-b598-a0b56b053d4d" shortcut="Vm" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5095b3ce-c808-4521-b042-23b3bb42deea" shortcut="Vs" description="A shared field of type $typename$" text="Private Shared $fieldname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f141c499-ed82-4e93-bfae-a4acd919b53d" shortcut="Vl" description="A shared field of type $typename$" text="Private Shared $fieldname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c52734e9-5932-4110-9fe3-4009d601d326" shortcut="Vu" description="A shared field of type $typename$" text="Private Shared $fieldname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e05f88f6-8776-4789-bedc-4e5f68c8772f" shortcut="Vg" description="A shared field of type $typename$" text="Private Shared $fieldname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="061c8622-102e-43bd-880b-00e7c0c929ae" shortcut="Vt" description="A shared field of type $typename$" text="Private Shared $fieldname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="db849923-5c11-4cb4-adad-f1cf913b0ef4" shortcut="Vl.b" description="A shared field of type System.Collections.Generic.List(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0562b04f-e195-42d2-85a2-79e70a03a3b3" shortcut="Vl.c" description="A shared field of type System.Collections.Generic.List(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bddb2c5d-170e-4975-b84e-01c007eb7cbc" shortcut="Vl.f" description="A shared field of type System.Collections.Generic.List(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4dc4e565-02ca-424f-b1d4-191e15abc79b" shortcut="Vl.by" description="A shared field of type System.Collections.Generic.List(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5cf6a9fd-d7ac-425f-a679-e5b3a4a11d1e" shortcut="Vl.d" description="A shared field of type System.Collections.Generic.List(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5c3f8c26-10c5-4015-814e-6c4d22af7ed7" shortcut="Vl.i" description="A shared field of type System.Collections.Generic.List(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="858390a3-225f-4401-b209-49e785c477a2" shortcut="Vl.m" description="A shared field of type System.Collections.Generic.List(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="176bfe72-7a80-4777-ae4f-0ebfdc3e2a1e" shortcut="Vl.s" description="A shared field of type System.Collections.Generic.List(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ffcb57c1-ad74-435f-802a-ec46c8ad8935" shortcut="Vl.l" description="A shared field of type System.Collections.Generic.List(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d30d16a-c692-4278-9d88-a2461dc425dd" shortcut="Vl.u" description="A shared field of type System.Collections.Generic.List(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d638feaf-3916-4884-9ac5-835cb9650c5f" shortcut="Vl.g" description="A shared field of type System.Collections.Generic.List(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bcdc879b-3460-4e52-861b-5a4deae73180" shortcut="Vl.t" description="A shared field of type System.Collections.Generic.List(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4c2ca9c5-5d36-45ca-9f9b-e703571e5b15" shortcut="Vh.b" description="A shared field of type System.Collections.Generic.HashSet(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bd6824df-1127-4f70-98c7-2bf36365432f" shortcut="Vh.c" description="A shared field of type System.Collections.Generic.HashSet(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f30a98f-a9c4-46b6-b23d-cc00e28dbc32" shortcut="Vh.f" description="A shared field of type System.Collections.Generic.HashSet(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="eb44d331-0a9c-4f05-aa8c-d99f8ead9a7b" shortcut="Vh.by" description="A shared field of type System.Collections.Generic.HashSet(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="021e2cbe-d7a8-494e-8e58-3fa453eb8685" shortcut="Vh.d" description="A shared field of type System.Collections.Generic.HashSet(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="172f3f9f-6a9d-4205-8f52-142ef0df9d23" shortcut="Vh.i" description="A shared field of type System.Collections.Generic.HashSet(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f439116d-ede4-4b08-bfe8-1ea676610ad8" shortcut="Vh.m" description="A shared field of type System.Collections.Generic.HashSet(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1ae65122-3c92-4af7-a9d0-ed0fc93910f2" shortcut="Vh.s" description="A shared field of type System.Collections.Generic.HashSet(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c6c3291f-0291-4689-a3be-82aa01295447" shortcut="Vh.l" description="A shared field of type System.Collections.Generic.HashSet(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="872e61cf-6f62-4aa6-ae5b-949a7af11fb7" shortcut="Vh.u" description="A shared field of type System.Collections.Generic.HashSet(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7176f2a7-ecd0-4e89-b6b8-4e64692eb129" shortcut="Vh.g" description="A shared field of type System.Collections.Generic.HashSet(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6e280022-a090-417e-bf88-444788fc371d" shortcut="Vh.t" description="A shared field of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="27b8c205-05dd-4495-a24f-42bf668ad8cf" shortcut="V~b" description="A shared field of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae5abfd1-4fd8-450d-90ce-70a600a5c00a" shortcut="V~c" description="A shared field of type System.Collections.Generic.IEnumerable(Of Char)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bca8e40b-f865-48a9-ae54-5532616a4c14" shortcut="V~f" description="A shared field of type System.Collections.Generic.IEnumerable(Of Single)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73a91169-f8e2-460b-a79c-7a7a69e66c55" shortcut="V~by" description="A shared field of type System.Collections.Generic.IEnumerable(Of Byte)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a3fd1fe-6a6c-49cf-a91a-99d6e4014556" shortcut="V~d" description="A shared field of type System.Collections.Generic.IEnumerable(Of Double)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a07ca5be-1ce6-40fe-868a-a5d6de715bad" shortcut="V~i" description="A shared field of type System.Collections.Generic.IEnumerable(Of Integer)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d61dfe2-e539-4c92-9475-945a60b6d992" shortcut="V~m" description="A shared field of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de1702fb-853d-4c66-a2be-e7746c2732a6" shortcut="V~s" description="A shared field of type System.Collections.Generic.IEnumerable(Of String)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef5d629a-4e48-4a68-9eb5-893c05d04ef5" shortcut="V~l" description="A shared field of type System.Collections.Generic.IEnumerable(Of Long)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8977edb3-1050-44ba-a078-b5d2733cd739" shortcut="V~u" description="A shared field of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dc773a76-dbee-48ec-80c1-75ce60193997" shortcut="V~g" description="A shared field of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d61bbc54-46ef-4437-b71d-e4875c8d23db" shortcut="V~t" description="A shared field of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Private Shared $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5b3d638b-e928-42e8-b41f-d8e47966ddc9" shortcut="nb" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Boolean = False" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a256475a-7636-44e8-8015-7e3c1556a1e0" shortcut="nc" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Char = ''" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a37657a-fbc4-4c5f-b7d1-d8d8c9e3bff9" shortcut="nf" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Single = 0.0f" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7ff95a20-cb25-4c9a-bfad-b7c8ad51398e" shortcut="nby" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Byte = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e436fa5a-b398-42a3-95db-d8d1daf83b54" shortcut="nd" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Double = 0.0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a583f549-6a45-4df8-a586-5867f889a7ac" shortcut="ni" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Integer = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="20a31c3f-60ca-48bb-b5e3-1caa9a356d2c" shortcut="nm" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Decimal = 0M" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0cc11bf8-f7df-4058-b625-a35dee3565ad" shortcut="ns" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As String = &quot;&quot;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="588ed01d-f141-477d-872c-af2f4e47e4ab" shortcut="nl" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As Long = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="59de3401-c6e8-4c64-8d82-8e0b41ce0a9e" shortcut="nu" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As UInteger = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d312cb1-e54c-497a-afeb-3e7e87dc8dd0" shortcut="ng" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As System.Guid = System.Guid.NewGuid()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a2175812-b3a2-4ed8-b4d1-c1bafced0c31" shortcut="nt" description="A field of type $typename$ initialized to the default value." text="Private $fieldname$ As System.DateTime = System.DateTime.UtcNow" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e808feb8-a9e0-4287-8935-cf610656a9af" shortcut="nl.b" description="A field of type System.Collections.Generic.List(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Boolean) = new System.Collections.Generic.List(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="02f3aa14-491e-47cc-8b6a-d4db56618a4d" shortcut="nl.c" description="A field of type System.Collections.Generic.List(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Char) = new System.Collections.Generic.List(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b219967-15e6-4244-8f9d-1a75d1c952f2" shortcut="nl.f" description="A field of type System.Collections.Generic.List(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Single) = new System.Collections.Generic.List(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="40b476e4-9f21-4bb3-b2ee-0f3053000123" shortcut="nl.by" description="A field of type System.Collections.Generic.List(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Byte) = new System.Collections.Generic.List(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="25e56e87-95b0-42d4-a895-0fd2a6aa86e6" shortcut="nl.d" description="A field of type System.Collections.Generic.List(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Double) = new System.Collections.Generic.List(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="560b0daf-da5a-4219-8a37-a0651b6a8a0e" shortcut="nl.i" description="A field of type System.Collections.Generic.List(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Integer) = new System.Collections.Generic.List(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="276b318b-eaff-47b0-85c4-19ce770bbe9b" shortcut="nl.m" description="A field of type System.Collections.Generic.List(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Decimal) = new System.Collections.Generic.List(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d5e96745-fa2d-4464-a67f-c9ac5e88ea07" shortcut="nl.s" description="A field of type System.Collections.Generic.List(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of String) = new System.Collections.Generic.List(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="edb718f8-3241-4a9f-9340-e09dde2bb934" shortcut="nl.l" description="A field of type System.Collections.Generic.List(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of Long) = new System.Collections.Generic.List(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ba22fb5-d5ba-4349-8f36-784849dff273" shortcut="nl.u" description="A field of type System.Collections.Generic.List(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of UInteger) = new System.Collections.Generic.List(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56484d5f-034a-41f1-99e1-9a023db520a5" shortcut="nl.g" description="A field of type System.Collections.Generic.List(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of System.Guid) = new System.Collections.Generic.List(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="68dd7cff-8f4a-49f4-bf3c-0d71ec3fae3b" shortcut="nl.t" description="A field of type System.Collections.Generic.List(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.List(Of System.DateTime) = new System.Collections.Generic.List(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="04b402af-2579-446a-864e-cd75c93bf1a5" shortcut="nh.b" description="A field of type System.Collections.Generic.HashSet(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Boolean) = new System.Collections.Generic.HashSet(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55d06b20-778b-484f-abfd-3b3e97af5b3b" shortcut="nh.c" description="A field of type System.Collections.Generic.HashSet(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Char) = new System.Collections.Generic.HashSet(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e372abff-9558-4bb5-b4f2-fa4b0552b3c5" shortcut="nh.f" description="A field of type System.Collections.Generic.HashSet(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Single) = new System.Collections.Generic.HashSet(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="045d0be4-a44d-4362-9305-727508816bdc" shortcut="nh.by" description="A field of type System.Collections.Generic.HashSet(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Byte) = new System.Collections.Generic.HashSet(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3964fa66-3b2b-4f8b-8ba3-b4326beee5d1" shortcut="nh.d" description="A field of type System.Collections.Generic.HashSet(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Double) = new System.Collections.Generic.HashSet(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ae145e3-5f6d-46ab-af13-05d0d901b750" shortcut="nh.i" description="A field of type System.Collections.Generic.HashSet(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Integer) = new System.Collections.Generic.HashSet(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e10a7d7-4960-4e34-8ae9-013968e87de3" shortcut="nh.m" description="A field of type System.Collections.Generic.HashSet(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Decimal) = new System.Collections.Generic.HashSet(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8434444-16bf-4ccb-a600-f1fbe2d6b354" shortcut="nh.s" description="A field of type System.Collections.Generic.HashSet(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of String) = new System.Collections.Generic.HashSet(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8aac555a-704e-4dbf-a2c2-47829492f0d4" shortcut="nh.l" description="A field of type System.Collections.Generic.HashSet(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of Long) = new System.Collections.Generic.HashSet(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b936128d-d998-4713-9c4c-1fae33cc6ab3" shortcut="nh.u" description="A field of type System.Collections.Generic.HashSet(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of UInteger) = new System.Collections.Generic.HashSet(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="27824060-232b-4e43-a289-4a6e14e0b2ad" shortcut="nh.g" description="A field of type System.Collections.Generic.HashSet(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid) = new System.Collections.Generic.HashSet(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1c6e6169-0a4f-40f5-81a7-c12e7539ea46" shortcut="nh.t" description="A field of type System.Collections.Generic.HashSet(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime) = new System.Collections.Generic.HashSet(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0d669327-2d8d-49cc-b062-97df58714a40" shortcut="n~b" description="A field of type System.Collections.Generic.IEnumerable(Of Boolean) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean) = new System.Collections.Generic.IEnumerable(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7a03f78f-37c1-498f-aba9-4a4131b5dc6f" shortcut="n~c" description="A field of type System.Collections.Generic.IEnumerable(Of Char) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Char) = new System.Collections.Generic.IEnumerable(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c83b8e73-782b-4227-9e43-06efd52661ef" shortcut="n~f" description="A field of type System.Collections.Generic.IEnumerable(Of Single) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Single) = new System.Collections.Generic.IEnumerable(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="908e3b76-e89a-4fdb-add3-f37d6a27f657" shortcut="n~by" description="A field of type System.Collections.Generic.IEnumerable(Of Byte) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte) = new System.Collections.Generic.IEnumerable(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de0c238d-8b7b-4994-b0c6-0cb66f2ede4f" shortcut="n~d" description="A field of type System.Collections.Generic.IEnumerable(Of Double) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Double) = new System.Collections.Generic.IEnumerable(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d9b1d94-088a-4bc8-9374-81d3c554b701" shortcut="n~i" description="A field of type System.Collections.Generic.IEnumerable(Of Integer) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer) = new System.Collections.Generic.IEnumerable(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="486fc77b-1200-4f3c-9735-50bfb80be906" shortcut="n~m" description="A field of type System.Collections.Generic.IEnumerable(Of Decimal) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal) = new System.Collections.Generic.IEnumerable(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c7a4c3fe-e72f-42ed-9be7-ddbb03651fc1" shortcut="n~s" description="A field of type System.Collections.Generic.IEnumerable(Of String) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of String) = new System.Collections.Generic.IEnumerable(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3f095716-dd21-4ec4-8d23-968678108d55" shortcut="n~l" description="A field of type System.Collections.Generic.IEnumerable(Of Long) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of Long) = new System.Collections.Generic.IEnumerable(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48c9fea4-613c-4d9b-8536-cc53eb93c74c" shortcut="n~u" description="A field of type System.Collections.Generic.IEnumerable(Of UInteger) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger) = new System.Collections.Generic.IEnumerable(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d97a3ce9-0b81-4de0-9602-ad7de18b28e4" shortcut="n~g" description="A field of type System.Collections.Generic.IEnumerable(Of System.Guid) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid) = new System.Collections.Generic.IEnumerable(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="efb55932-e9a8-4c90-a45a-8a73b531ff99" shortcut="n~t" description="A field of type System.Collections.Generic.IEnumerable(Of System.DateTime) initialized to the default value." text="Private $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime) = new System.Collections.Generic.IEnumerable(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3a299d1c-b567-44bf-a95c-b09c701680b2" shortcut="ob" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Boolean = False" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4758d173-0cf0-4d07-a2d7-4f6abfac2bc8" shortcut="oc" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Char = ''" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0bc1d9eb-549a-4062-b6ca-c59cb2c1921b" shortcut="of" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Single = 0.0f" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5480399c-2480-46cf-ac12-4480173ded68" shortcut="oby" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Byte = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8f76080-55cb-4a1c-b16e-f8ea29221eab" shortcut="od" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Double = 0.0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c17d7a57-2704-4131-b5de-7dae9dc391ff" shortcut="oi" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Integer = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="684a0de3-82d6-46a1-8042-d2381a702df4" shortcut="om" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Decimal = 0M" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="92c3cebe-9de0-4f1c-95ca-7c37601deed2" shortcut="os" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As String = &quot;&quot;" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a8d6ca8d-2704-4148-973a-7a349b5cc292" shortcut="ol" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As Long = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c5592429-7060-4e56-a32c-5970134f2ca4" shortcut="ou" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As UInteger = 0" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b3610f6d-66f4-4f54-80c9-a89fcf52093c" shortcut="og" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As System.Guid = System.Guid.NewGuid()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="189a1161-0618-4e0b-8cb7-a0f2ecd4d7d2" shortcut="ot" description="A readonly field of type $typename$ initialized to the default value." text="Private ReadOnly $fieldname$ As System.DateTime = System.DateTime.UtcNow" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="127381bb-1722-42b7-b2f2-285d2c82d9ea" shortcut="ol.b" description="A readonly field of type System.Collections.Generic.List(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Boolean) = new System.Collections.Generic.List(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e0d4cc3-7517-4330-ad99-7d365d72a016" shortcut="ol.c" description="A readonly field of type System.Collections.Generic.List(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Char) = new System.Collections.Generic.List(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e2ff966-5926-4fd4-83f9-40509193dc0a" shortcut="ol.f" description="A readonly field of type System.Collections.Generic.List(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Single) = new System.Collections.Generic.List(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dd337890-4e60-4ded-95dd-d8f21908f36d" shortcut="ol.by" description="A readonly field of type System.Collections.Generic.List(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Byte) = new System.Collections.Generic.List(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1e5eeafe-b872-4b44-9ad4-fed0a970a872" shortcut="ol.d" description="A readonly field of type System.Collections.Generic.List(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Double) = new System.Collections.Generic.List(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5db45622-f610-41f4-a56b-bbe5660eaa39" shortcut="ol.i" description="A readonly field of type System.Collections.Generic.List(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Integer) = new System.Collections.Generic.List(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0eef3d11-0d75-4df5-b4c8-9b2c9d287598" shortcut="ol.m" description="A readonly field of type System.Collections.Generic.List(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Decimal) = new System.Collections.Generic.List(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2f0aa6fe-ed5a-4b51-8a0d-3ff4ca46b444" shortcut="ol.s" description="A readonly field of type System.Collections.Generic.List(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of String) = new System.Collections.Generic.List(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0ef4d1f-fbd7-45d2-a4d1-1594b51c8de7" shortcut="ol.l" description="A readonly field of type System.Collections.Generic.List(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of Long) = new System.Collections.Generic.List(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9eb30cf9-d71d-4817-b4a9-cc0941ef26c5" shortcut="ol.u" description="A readonly field of type System.Collections.Generic.List(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of UInteger) = new System.Collections.Generic.List(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b3214d31-3a92-4e2e-850f-3ed3e6081c27" shortcut="ol.g" description="A readonly field of type System.Collections.Generic.List(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.Guid) = new System.Collections.Generic.List(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c134d419-4a2f-4cc5-b4ad-0bec9ab6beae" shortcut="ol.t" description="A readonly field of type System.Collections.Generic.List(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.List(Of System.DateTime) = new System.Collections.Generic.List(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9228ebe0-86f5-4014-b673-2e7d178bb112" shortcut="oh.b" description="A readonly field of type System.Collections.Generic.HashSet(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Boolean) = new System.Collections.Generic.HashSet(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a755ec05-61ac-4908-afe9-dce2ac3d549d" shortcut="oh.c" description="A readonly field of type System.Collections.Generic.HashSet(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Char) = new System.Collections.Generic.HashSet(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5209daa1-ff33-4f5b-8b63-e50a93701a79" shortcut="oh.f" description="A readonly field of type System.Collections.Generic.HashSet(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Single) = new System.Collections.Generic.HashSet(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b1795c02-7b85-452e-a6d4-c5c3a8122e14" shortcut="oh.by" description="A readonly field of type System.Collections.Generic.HashSet(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Byte) = new System.Collections.Generic.HashSet(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0c013726-0b8b-4395-b83c-6cb4e4d83386" shortcut="oh.d" description="A readonly field of type System.Collections.Generic.HashSet(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Double) = new System.Collections.Generic.HashSet(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="097d8c16-3fb5-44cb-9d45-ece85277b974" shortcut="oh.i" description="A readonly field of type System.Collections.Generic.HashSet(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Integer) = new System.Collections.Generic.HashSet(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b383b90a-eecd-42d3-af3f-3d5dc5b31f74" shortcut="oh.m" description="A readonly field of type System.Collections.Generic.HashSet(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Decimal) = new System.Collections.Generic.HashSet(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="62f91cf0-cfba-4eff-862b-68130b95fca3" shortcut="oh.s" description="A readonly field of type System.Collections.Generic.HashSet(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of String) = new System.Collections.Generic.HashSet(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fde50d1b-ebf9-4a59-9075-9f8261f5f283" shortcut="oh.l" description="A readonly field of type System.Collections.Generic.HashSet(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of Long) = new System.Collections.Generic.HashSet(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9fed9c57-4825-42f4-8334-03ab6d5dc2ef" shortcut="oh.u" description="A readonly field of type System.Collections.Generic.HashSet(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of UInteger) = new System.Collections.Generic.HashSet(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0b0b6863-d18c-4c75-a393-bdbb933b1850" shortcut="oh.g" description="A readonly field of type System.Collections.Generic.HashSet(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.Guid) = new System.Collections.Generic.HashSet(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="75defeca-174d-44be-80f0-2562fdeb87b3" shortcut="oh.t" description="A readonly field of type System.Collections.Generic.HashSet(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.HashSet(Of System.DateTime) = new System.Collections.Generic.HashSet(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57758aaf-1bd2-49d1-a936-5960c6d32682" shortcut="o~b" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Boolean) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Boolean) = new System.Collections.Generic.IEnumerable(Of Boolean)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="66d90996-6f47-468b-baa9-4c71d07e56fc" shortcut="o~c" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Char) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Char) = new System.Collections.Generic.IEnumerable(Of Char)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="93673a17-14b2-401e-8fe9-9fbd3a261865" shortcut="o~f" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Single) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Single) = new System.Collections.Generic.IEnumerable(Of Single)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c1f41fa9-5559-4f9c-9a9d-2fb547f80c1c" shortcut="o~by" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Byte) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Byte) = new System.Collections.Generic.IEnumerable(Of Byte)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="129b5c48-64cf-416d-8514-8691436e1eac" shortcut="o~d" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Double) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Double) = new System.Collections.Generic.IEnumerable(Of Double)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2b5d7ce0-79f9-488d-a1f7-0bb06e6ac0a6" shortcut="o~i" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Integer) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Integer) = new System.Collections.Generic.IEnumerable(Of Integer)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2211c464-a897-4739-b5b5-f20a7bd597ec" shortcut="o~m" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Decimal) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Decimal) = new System.Collections.Generic.IEnumerable(Of Decimal)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fc55a6d8-a84b-41e9-b3e0-2c1a8b6c7aa2" shortcut="o~s" description="A readonly field of type System.Collections.Generic.IEnumerable(Of String) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of String) = new System.Collections.Generic.IEnumerable(Of String)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ecefe58-2bc3-40fd-952f-d603c8f58377" shortcut="o~l" description="A readonly field of type System.Collections.Generic.IEnumerable(Of Long) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of Long) = new System.Collections.Generic.IEnumerable(Of Long)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="48595651-b414-4625-96f3-930e3926c506" shortcut="o~u" description="A readonly field of type System.Collections.Generic.IEnumerable(Of UInteger) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of UInteger) = new System.Collections.Generic.IEnumerable(Of UInteger)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b63e676-b1bb-4fd2-b34d-f15d278afc9f" shortcut="o~g" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.Guid) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.Guid) = new System.Collections.Generic.IEnumerable(Of System.Guid)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="34ac95fd-f90d-49c0-becb-e366e65876a5" shortcut="o~t" description="A readonly field of type System.Collections.Generic.IEnumerable(Of System.DateTime) initialized to the default value." text="Private ReadOnly $fieldname$ As System.Collections.Generic.IEnumerable(Of System.DateTime) = new System.Collections.Generic.IEnumerable(Of System.DateTime)()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="fieldname" expression="constant(&quot;fieldname&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e68a5bab-47d8-4dc7-b303-c536480d6d79" shortcut="tb" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7b0ae99d-6549-4e4b-979b-2e85ff24d97d" shortcut="tc" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="33763510-90ce-4fcc-86ae-338bf5303cd9" shortcut="tf" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="12ddd76b-b999-4cf9-ac4c-537e3f99d220" shortcut="tby" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="196f3ed4-ebbc-43ec-8765-e7ab2d287937" shortcut="td" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="afc3564e-9a04-4f99-82eb-f736480a12fe" shortcut="ti" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5ec18fab-073a-4fc4-b8f6-371f41139598" shortcut="tm" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0073f151-586d-476f-b543-f8c3c15536ed" shortcut="ts" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5cbb859f-d2ed-4b3e-b034-85b96a9c696a" shortcut="tl" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1aef04f-99b3-4599-b70f-d870d7e1603e" shortcut="tu" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0f423f0-3829-4008-aa29-307326e169ce" shortcut="tg" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="74fffd6c-2628-4ddb-bedc-feb7b016f951" shortcut="tt" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="530b7e8d-7eb4-4da7-bf30-8c82214aa1c7" shortcut="tl.b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e7a37bdc-d2f9-42ac-92b1-0fc59acb3e9d" shortcut="tl.c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1954e52d-0b2b-4a22-b75b-639f55e0f8db" shortcut="tl.f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f91f5b76-30e2-4d8f-8469-db605eb93328" shortcut="tl.by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e6fe297f-5e3f-4807-9d51-b7d074dbf0ad" shortcut="tl.d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11257cf2-922d-4045-a941-7ed6da08554c" shortcut="tl.i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3b7472d-3a53-4579-a550-28dbc51661f1" shortcut="tl.m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42f71da3-5816-4219-9047-03e73f6444b9" shortcut="tl.s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3d6abe55-cd5f-4e88-9876-f29996cba73c" shortcut="tl.l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="46772831-6272-4c65-a7f4-5a3f22dc859d" shortcut="tl.u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ed75ffc-0d36-4165-8b04-36ba837dca3e" shortcut="tl.g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9b1fa677-d271-4918-b73b-8fdbdbe92b92" shortcut="tl.t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="601b15dd-cfce-4e0e-bea7-5974a09bd966" shortcut="th.b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7550ed18-5288-4640-9001-c0e2908a4df5" shortcut="th.c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8a3f9a9b-c79f-4c1f-86c5-555ab000ed5c" shortcut="th.f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4719d4fa-0dbd-495e-805f-c6f2ba87b52a" shortcut="th.by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9cfa05dd-9742-43d1-af2d-f24dff1a99c5" shortcut="th.d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="59bbee72-d8ab-4d6e-999e-cece949e3c3a" shortcut="th.i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6e53342e-feaa-4886-b579-8c441be90ed9" shortcut="th.m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="63377747-7eed-4dfe-ada4-eb789f96ab8e" shortcut="th.s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="481ca96a-b422-4142-bacb-2ee4567762e1" shortcut="th.l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0337726f-a26b-46df-8186-a37fc3922bee" shortcut="th.u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="34e62b72-4907-4067-9515-435dd39cb7f9" shortcut="th.g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9bc086c8-ef09-4d7a-8c49-33f4f3bc506d" shortcut="th.t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="daff7975-2440-4efa-b41e-66b94711ed06" shortcut="t~b" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08a49a96-bf3f-485f-96cc-090f49b3dfd5" shortcut="t~c" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa16bfd1-2990-4fc3-b95c-eb823328da7c" shortcut="t~f" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1a77f463-7017-488b-a7f2-601be2047dae" shortcut="t~by" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56e2385f-a95c-46aa-a4ed-04d9c0d9c28b" shortcut="t~d" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="dcc01056-058d-4d30-9f56-fb25359958a4" shortcut="t~i" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4d93b4e-4b94-45f3-8381-fff80df1c82b" shortcut="t~m" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0930d6a2-0b32-420f-91ea-e95a256a4bdb" shortcut="t~s" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d58e756-82a4-44ab-bf95-dc33ae6897ca" shortcut="t~l" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d868ec4e-feb8-41cb-9e84-6ff3f318d98a" shortcut="t~u" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="416bb6cc-ee17-4d0d-8ce0-e854bf167218" shortcut="t~g" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5d86f348-0847-49b9-99bc-a7f9543fe89f" shortcut="t~t" description="A test method." text="&lt;Test&gt; Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="96b787d6-a9ec-4b62-8d12-9f2aadda7198" shortcut="mb" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8095577c-d9ca-45a4-b568-d82987806787" shortcut="mc" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e09652d-cb00-4da4-ab8f-60381c4dbb5c" shortcut="mf" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="405e3fa7-4ab4-4572-9f62-18c23864748b" shortcut="mby" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fa19ff52-531b-4e06-a684-f28b44c2c3c8" shortcut="md" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="066333ba-575f-466a-a56b-ecb7bb37d7d9" shortcut="mi" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0a431c78-61b5-455e-ba0a-1281855a3edf" shortcut="mm" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9488e9d9-d290-4b59-ad9a-8c27b79e8fa4" shortcut="ms" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e7ead057-8851-4703-888b-582016ffa96f" shortcut="ml" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e83d0418-cc91-4acd-90b5-032e766c8dc2" shortcut="mu" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5da60413-d651-4692-8766-9a02c3a4642f" shortcut="mg" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="380c41d5-7821-47b4-b2d7-7df908597daa" shortcut="mt" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8865d31c-9212-425a-b75e-a91aeb39b9c6" shortcut="ml.b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3fe54360-2308-4ec3-8fc5-03c3ab7ce1c8" shortcut="ml.c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ae86e904-30e2-4dfc-b83f-e9e73dd13eb2" shortcut="ml.f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cac4edef-808b-4135-acfe-5093d302b1d6" shortcut="ml.by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7c9ccc87-9a73-407c-b157-65a822588e92" shortcut="ml.d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="afd3dfad-8f03-4afb-bf61-ea5a055ef8b0" shortcut="ml.i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="551bead8-7cde-48dd-8187-cf1bb0e9cbd4" shortcut="ml.m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8300c0bc-0674-4334-80bb-950ad497a116" shortcut="ml.s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4f462736-6792-44f8-8d4f-e08a938a99e2" shortcut="ml.l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="20ed7f98-f24d-4938-a3ae-6eb6d6835ab7" shortcut="ml.u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="126af05d-d078-42ff-8909-ced2273b91f9" shortcut="ml.g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f5333e64-7115-41b4-86ac-0f2786050795" shortcut="ml.t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="27fd6d65-c58e-49d6-ac08-c72d4d1bcae9" shortcut="mh.b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ef471738-ef18-47fe-bbb1-e0d94be5f89e" shortcut="mh.c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac9bbea1-d668-4dd8-b720-8fda5c8e05d7" shortcut="mh.f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e501c3a-fbea-4246-ae31-648beffd7599" shortcut="mh.by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0e82ca3a-a6ad-4236-aee1-563972c6cf35" shortcut="mh.d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="637869b5-4351-4540-936b-927c507de41d" shortcut="mh.i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="799d0fa4-5780-4cdb-81b5-1c1e4f8420a0" shortcut="mh.m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd5f66ad-87c2-4039-98ab-d9f87725cca5" shortcut="mh.s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d7b8a995-109d-48a4-892b-b35349e89499" shortcut="mh.l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f633f16c-4e88-4553-8fc8-630a983585f1" shortcut="mh.u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a70bee05-7a51-465d-bfb6-78a830c18897" shortcut="mh.g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6024d0f5-ec6c-4eb8-8db5-81619ddcc8bf" shortcut="mh.t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="683cbe0b-a9da-4c22-b39c-c37397220372" shortcut="m~b" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47a79c96-3ed4-4ca0-9d5b-89fff9c2cc51" shortcut="m~c" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cacd375b-7424-464a-a7b9-0b35367f8c2d" shortcut="m~f" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="995cbe67-3f48-4a4e-8195-3ecff3ecd67e" shortcut="m~by" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3406a731-9d6e-459b-be3a-de3d9d69b018" shortcut="m~d" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="016a1ab6-f686-40dd-849f-d856aac9ef25" shortcut="m~i" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="11d069b7-0897-4487-bcae-85a30e6fbb1d" shortcut="m~m" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b345ab0b-340c-4742-a6a0-b05b99e33dfd" shortcut="m~s" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9ad6777e-369a-43fb-a04d-237c249f25f3" shortcut="m~l" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5fd4008c-cc56-45f0-8838-aa5f92fedd32" shortcut="m~u" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="028921d8-5427-46eb-b31f-5cd521c1d7ca" shortcut="m~g" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="de22c220-4a24-46cc-a227-6aac7e6ef7c3" shortcut="m~t" description="A subroutine." text="Public Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b90d35c5-9aef-459e-83b1-715ce1d539a1" shortcut="Mb" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="94b6f292-a244-4924-8484-fc409b9a2587" shortcut="Mc" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c0b1973d-fc2d-4cc9-bf13-b2b2df9ba293" shortcut="Mf" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="54a8bd56-25f8-4585-bbbb-9c11113eb4ee" shortcut="Mby" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cd82bd56-db59-4e97-90a0-b4c32cfeb1de" shortcut="Md" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="96b21abd-7f66-4fe2-9ee3-a71ff627ce3c" shortcut="Mi" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="24bfe156-4fa9-409b-99d3-13ec440d0022" shortcut="Mm" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57865296-403a-4daf-9778-6a35c87fbe6e" shortcut="Ms" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="00e34623-d38c-44ff-8ba0-92f6a074714b" shortcut="Ml" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fece76d3-9e28-4e5c-91d6-46a0b2ef99e0" shortcut="Mu" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="faadacb1-f64c-4af2-933b-e96570f255c3" shortcut="Mg" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6ca51d2e-ad21-4416-9ace-dd3044274ded" shortcut="Mt" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="69b837ff-fd18-4fe9-b920-a0dbf423714a" shortcut="Ml.b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="26bb8b76-edb4-4835-a7fb-35ebbb06b454" shortcut="Ml.c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bb6ff17d-3242-4c43-ada8-474cce3cebaa" shortcut="Ml.f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c9c439b-f9a0-48f1-a3e2-2e0767c04bac" shortcut="Ml.by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c01d1b5c-da77-4c86-9454-5c08ea318b89" shortcut="Ml.d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="33ded2a3-30ae-4c91-ac05-2bfca2f80f44" shortcut="Ml.i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b965ccd-8e4b-47d3-bdbc-80abb21f84a9" shortcut="Ml.m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="20a49809-2da5-4f6b-ad72-3333999967f9" shortcut="Ml.s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d3b59912-cad4-43f7-8ab2-b24b3394ac2d" shortcut="Ml.l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e82538c0-3a27-4530-bd47-8c7683d90e69" shortcut="Ml.u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="66a4dd2e-f2bb-4c4a-ad8d-e3f180c56457" shortcut="Ml.g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d228b926-a092-4c30-8252-7aa9f67ed1df" shortcut="Ml.t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97112fd6-bc2d-4b0d-b431-7d7c172770cd" shortcut="Mh.b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6a027cb3-a506-4d61-8586-9472a2509665" shortcut="Mh.c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7f6f93f-0139-4df6-81b7-a898456e7c73" shortcut="Mh.f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4127b00d-e146-4db1-8027-0dfc7aba64d1" shortcut="Mh.by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="aaad9582-d92d-442d-ae9e-fc894725fc77" shortcut="Mh.d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4f69033b-4040-4cd6-be25-9a9a0917e399" shortcut="Mh.i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e36639c5-faaf-4419-817a-0ce9a5257c21" shortcut="Mh.m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="743dbeb8-de72-49b1-9a7c-c86ec7cab2bd" shortcut="Mh.s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b804a056-bf36-451c-9316-5813855eb69d" shortcut="Mh.l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8724cb8-a2eb-4006-a91b-bb6ccb527676" shortcut="Mh.u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ba5235c1-b384-4427-b195-35824ddccdd4" shortcut="Mh.g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="91d451b2-9ab1-4a0d-821a-b93b1d3a7763" shortcut="Mh.t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8efd8e0d-6fde-41ab-a294-d4b0041f859e" shortcut="M~b" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bdb87e9f-3860-47f8-b2a9-7af450cb8115" shortcut="M~c" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2e7543c1-763b-44b9-b83f-38834183dea4" shortcut="M~f" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6406192c-ee78-46c6-803b-c4260c613ac7" shortcut="M~by" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="71526bcb-aad7-44ca-9639-f6e75d1581d4" shortcut="M~d" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="949176c5-3656-433b-acd7-29a0ba7638ca" shortcut="M~i" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b4e0293-560d-424f-b494-d18de107b33f" shortcut="M~m" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8d1c183-1f72-454c-99e8-9462dc1580d1" shortcut="M~s" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="405240aa-c12d-4e6c-a9e3-c1df6613ab00" shortcut="M~l" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e0cb8a3d-57e9-4c2a-a386-0a198173174a" shortcut="M~u" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e60abedf-0a6c-4b55-9c25-b683a0426148" shortcut="M~g" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="39340f99-e2c2-427e-bef8-07177ca16ab8" shortcut="M~t" description="A shared subroutine." text="Public Shared Sub $methodname$()" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="3c7c0f8e-3618-47e2-b6a8-bc4a0bdbe2a1" shortcut="mb" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d03a272-031f-4236-8e83-00e1f758cd3b" shortcut="mc" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42d9359c-4d31-4ecb-9471-2e3708f7a7b7" shortcut="mf" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9c9e3a2e-142e-4288-95cd-cc9906be232e" shortcut="mby" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4e7e9674-587b-4386-bfc7-1840f7f30dee" shortcut="md" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8280cd8d-efb6-4ad5-b432-51f8e924a745" shortcut="mi" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ef63e61-537f-461b-8b71-7d6bc6899060" shortcut="mm" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5e546dda-c8bf-4ec8-88c4-27df356277f5" shortcut="ms" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f27f8cb4-42b5-4faf-bf4a-53d72bd63987" shortcut="ml" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="adb54ff1-6d0c-427b-aa1b-63e163f3d9e4" shortcut="mu" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bfab4a2d-b000-43e2-a62f-92e003728c26" shortcut="mg" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a05c936b-3bfd-476e-a15e-5fbe85df2419" shortcut="mt" description="A method that returns a(n) $typename$" text="Public Function $methodname$() As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="016446df-1ee6-4c2e-b859-453bce2fb492" shortcut="ml.b" description="A method that returns a(n) System.Collections.Generic.List(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1d34d566-97fd-4d10-83ae-97b23f8f89dd" shortcut="ml.c" description="A method that returns a(n) System.Collections.Generic.List(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="bf8179df-b621-4811-9501-daa6ace2011f" shortcut="ml.f" description="A method that returns a(n) System.Collections.Generic.List(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8d2779d1-6211-49b5-ba93-d198c784f43d" shortcut="ml.by" description="A method that returns a(n) System.Collections.Generic.List(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d8c653d-cf99-4da3-8e6f-c2c258f55f82" shortcut="ml.d" description="A method that returns a(n) System.Collections.Generic.List(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="863da61c-5af2-4ed8-be1a-9bf2603caddc" shortcut="ml.i" description="A method that returns a(n) System.Collections.Generic.List(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="55f988f2-e758-4ff8-bc6d-4e1cd4069f6f" shortcut="ml.m" description="A method that returns a(n) System.Collections.Generic.List(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4357568a-012b-4761-87f8-f41d1fbb055d" shortcut="ml.s" description="A method that returns a(n) System.Collections.Generic.List(Of String)" text="Public Function $methodname$() As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f8d570ef-588a-4ac7-8fd5-7eab820b0efc" shortcut="ml.l" description="A method that returns a(n) System.Collections.Generic.List(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="282247fc-d0ba-41b4-9f63-701a61277ebf" shortcut="ml.u" description="A method that returns a(n) System.Collections.Generic.List(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6f751acd-ddad-4f8e-a06f-aa8d0126d364" shortcut="ml.g" description="A method that returns a(n) System.Collections.Generic.List(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f1d714a9-9f22-4fc3-9131-f33a6c41d981" shortcut="ml.t" description="A method that returns a(n) System.Collections.Generic.List(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="56935acd-a6d1-42b7-9497-d3056e56c2d2" shortcut="mh.b" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6c4ca64b-9c07-4276-a7e0-2d8e5f0e800d" shortcut="mh.c" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b9c32678-3d93-419d-a34c-4fc6455929f8" shortcut="mh.f" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="18c29951-ff4b-47bb-9a36-f505582f633f" shortcut="mh.by" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="57a9163d-2caf-4ba8-a9dd-36cee795da79" shortcut="mh.d" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2137aa28-5419-45ba-af5c-497679079ddd" shortcut="mh.i" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="97073469-10da-4e11-98c9-472c8a444790" shortcut="mh.m" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="643090cd-ecd3-427e-8d33-26c5020b0790" shortcut="mh.s" description="A method that returns a(n) System.Collections.Generic.HashSet(Of String)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f90fc8d4-63cd-429e-ad3c-bb85b747ec5c" shortcut="mh.l" description="A method that returns a(n) System.Collections.Generic.HashSet(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ca3543bf-7b45-4c3e-ba3e-4db6ff4a54f0" shortcut="mh.u" description="A method that returns a(n) System.Collections.Generic.HashSet(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2ebdbc89-565d-4817-95fb-d08608a3bb6f" shortcut="mh.g" description="A method that returns a(n) System.Collections.Generic.HashSet(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e7f8c225-658e-4f4d-9ef5-c31f16865505" shortcut="mh.t" description="A method that returns a(n) System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="00d5fe8e-a79c-48b4-81cf-4faded4fa7be" shortcut="m~b" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="adbde3f3-99aa-4c07-bc48-707c59f3efed" shortcut="m~c" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Char)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4c5b3ad-80f0-4e6b-a34d-c49cc8db74d0" shortcut="m~f" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Single)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="42a0d1f0-7e3b-4647-86d2-8acdc9cc42cc" shortcut="m~by" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Byte)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47528a92-e185-46c7-a4c7-85f19070c4c3" shortcut="m~d" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Double)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b8ff9eb5-30b9-48b7-9782-a6ce5fd9ef2c" shortcut="m~i" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Integer)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d03b774-7a65-4128-96cb-4a6e073af3df" shortcut="m~m" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="630636ed-2cd4-455f-b7ff-4018dac8d992" shortcut="m~s" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of String)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0115e073-7daa-41f0-ac90-45dda3b9491f" shortcut="m~l" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of Long)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="242bc8bc-7b82-4db7-9ec5-f524657015b1" shortcut="m~u" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ab242e2-c2fd-4bcc-bc7e-8f07326ac81a" shortcut="m~g" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="2d3b0052-0be6-45be-b6c3-b6756a6210e2" shortcut="m~t" description="A method that returns a(n) System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1efce314-930b-4fea-9982-ade8b0a5ec49" shortcut="Mb" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8089305d-9243-4096-948b-739bd3d4da8a" shortcut="Mc" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="da0504ec-24bc-41e6-a284-114d986fb6b2" shortcut="Mf" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c67d84d6-f0a6-4835-af52-a77a62851d18" shortcut="Mby" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="115524a3-4255-4584-a59c-538d556c2ff7" shortcut="Md" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="26a734f8-8bf5-47d2-ad30-dbc1bbc458f7" shortcut="Mi" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e12250d7-639f-4032-a85c-3b7377afdd87" shortcut="Mm" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="7e597d25-7e52-4c12-80d5-7e628c4ceb8a" shortcut="Ms" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="41daebd0-4503-4f06-9fe9-1cc589445af7" shortcut="Ml" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="428e3788-690f-438b-a44d-73b39208173d" shortcut="Mu" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="72702214-d601-4aeb-aba5-e417389dd141" shortcut="Mg" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="19ade692-bd45-4d62-ade9-5124ae61f4bc" shortcut="Mt" description="A shared method that returns a(n) $typename$" text="Public Shared Function $methodname$() As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="cfb56d32-5823-43eb-bbad-ad74b3a5f6c7" shortcut="Ml.b" description="A shared method that returns a(n) System.Collections.Generic.List(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="37616870-859c-4e34-b537-1b051ec94d9a" shortcut="Ml.c" description="A shared method that returns a(n) System.Collections.Generic.List(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9d905afb-b4cd-4e83-a08b-ca857faef528" shortcut="Ml.f" description="A shared method that returns a(n) System.Collections.Generic.List(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b0e18b7-36a3-435e-9b6f-ca8743c14c5a" shortcut="Ml.by" description="A shared method that returns a(n) System.Collections.Generic.List(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a4390aac-2c18-4685-8c5f-d2a0a27d3020" shortcut="Ml.d" description="A shared method that returns a(n) System.Collections.Generic.List(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4e71d4a-9a3a-4a11-acd1-688dc577e6ef" shortcut="Ml.i" description="A shared method that returns a(n) System.Collections.Generic.List(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0f5cc456-0b85-4b84-8534-e9bb0e7c5bc7" shortcut="Ml.m" description="A shared method that returns a(n) System.Collections.Generic.List(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d954be54-6032-4920-a62b-1eb8cc8fff81" shortcut="Ml.s" description="A shared method that returns a(n) System.Collections.Generic.List(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e979accb-3265-4fec-b89e-b99d185d0f6b" shortcut="Ml.l" description="A shared method that returns a(n) System.Collections.Generic.List(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6e3421e6-f8af-421e-981d-35da2b2f8ae6" shortcut="Ml.u" description="A shared method that returns a(n) System.Collections.Generic.List(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4bc4d878-2b9e-4b7d-879e-5a65aeffc917" shortcut="Ml.g" description="A shared method that returns a(n) System.Collections.Generic.List(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d014e8c6-67ab-4285-833f-e8557d4b8ccc" shortcut="Ml.t" description="A shared method that returns a(n) System.Collections.Generic.List(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="511332cc-dc11-40f9-adf3-a672a9e5457d" shortcut="Mh.b" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4b9a09c6-d5ae-4104-a49f-765ad5d0f098" shortcut="Mh.c" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ac29d173-f369-41c0-98de-da550d0546e5" shortcut="Mh.f" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="63332adb-bbd8-4ad2-866e-142ded29eee0" shortcut="Mh.by" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b0fae395-2113-4083-9c57-8a886b72f06b" shortcut="Mh.d" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="daeb5ea3-461c-4c4c-b349-fcdce434eeef" shortcut="Mh.i" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="971a0359-c2f1-4fb9-a836-8847df11988a" shortcut="Mh.m" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8120ea7d-8d0e-4b33-9fa3-04f9f3885fb0" shortcut="Mh.s" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="710b316c-4051-477b-9f48-885af8833574" shortcut="Mh.l" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0acd43bc-242d-4ab4-bbf9-f5d484791d42" shortcut="Mh.u" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e2d1522c-647b-4fbe-bb19-d8d8b897ddd3" shortcut="Mh.g" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="49ae0c10-c89b-4b2d-84dd-aaebc123ccb0" shortcut="Mh.t" description="A shared method that returns a(n) System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce42a71e-39b0-4cb7-a4f2-3f9ec48d61b8" shortcut="M~b" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1842608c-ff1e-4726-9f44-ee7afbeba48e" shortcut="M~c" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Char)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d1c89860-5641-439a-9c7b-42a2ece5eb95" shortcut="M~f" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Single)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="be4bca3a-5704-4893-82df-3b15368ded3f" shortcut="M~by" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Byte)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ed338463-a3f7-4835-ade1-922453736502" shortcut="M~d" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Double)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4d1404ee-9bdb-416a-b8d8-88a311d9bfad" shortcut="M~i" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Integer)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="53bb2632-b0db-40bb-bd89-5957b52084d2" shortcut="M~m" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="6d88e925-cfdd-4935-ae6c-83493db07b63" shortcut="M~s" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of String)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4acd1793-ea64-4393-84f5-2b8d7e1ef597" shortcut="M~l" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of Long)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="08f2dd53-7c88-49b3-9cf7-8a765eced641" shortcut="M~u" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="8ead30fb-5be5-472b-82e1-1279d0571a48" shortcut="M~g" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="534d5dc6-a4b6-43f3-9116-ed170451c32e" shortcut="M~t" description="A shared method that returns a(n) System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Shared Function $methodname$() As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="methodname" expression="constant(&quot;SomeMethod&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b7413f50-ff79-4232-bf94-88d8e372ccde" shortcut="pb" description="An automatic property of type $typename$" text="Public Property $propname$ As Boolean" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="71d8c05e-a8a1-4ed4-8780-87aedb971c0a" shortcut="pc" description="An automatic property of type $typename$" text="Public Property $propname$ As Char" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="077d562a-bf94-4758-af75-059bc01f6a7e" shortcut="pf" description="An automatic property of type $typename$" text="Public Property $propname$ As Single" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d1cfa993-7c4c-49c5-8a1c-c0eec6672865" shortcut="pby" description="An automatic property of type $typename$" text="Public Property $propname$ As Byte" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="90ea0cc9-899d-4e7c-be6c-bda2f1c4d379" shortcut="pd" description="An automatic property of type $typename$" text="Public Property $propname$ As Double" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c8585ae5-a173-4a39-933e-eb8ab0756655" shortcut="pi" description="An automatic property of type $typename$" text="Public Property $propname$ As Integer" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="abc2b3f9-7141-4abc-8d14-ccab79dfbc07" shortcut="pm" description="An automatic property of type $typename$" text="Public Property $propname$ As Decimal" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73cf8063-7609-469e-b166-92d4732f6131" shortcut="ps" description="An automatic property of type $typename$" text="Public Property $propname$ As String" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="35532ddf-147c-42fc-9e14-be17751ec052" shortcut="pl" description="An automatic property of type $typename$" text="Public Property $propname$ As Long" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d57ab4db-3b1e-4e62-a35b-01f528b168fa" shortcut="pu" description="An automatic property of type $typename$" text="Public Property $propname$ As UInteger" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="0240fcca-e6fe-45b7-9c68-e441c0a290fd" shortcut="pg" description="An automatic property of type $typename$" text="Public Property $propname$ As System.Guid" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="035ca4b7-a14d-49ca-a49d-8e824d880177" shortcut="pt" description="An automatic property of type $typename$" text="Public Property $propname$ As System.DateTime" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a78d858b-d760-46c4-8d66-24fc5072ac36" shortcut="pl.b" description="An automatic property of type System.Collections.Generic.List(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.List(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b4503d8d-a3ed-4379-a904-366a7f282f25" shortcut="pl.c" description="An automatic property of type System.Collections.Generic.List(Of Char)" text="Public Property $propname$ As System.Collections.Generic.List(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="262549cc-c0fb-4f5f-bc82-e1edb2053433" shortcut="pl.f" description="An automatic property of type System.Collections.Generic.List(Of Single)" text="Public Property $propname$ As System.Collections.Generic.List(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="a5b926a4-8435-410e-b8bd-942faf6d34f4" shortcut="pl.by" description="An automatic property of type System.Collections.Generic.List(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.List(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="47ea7399-f58b-408a-beb2-3833091c272e" shortcut="pl.d" description="An automatic property of type System.Collections.Generic.List(Of Double)" text="Public Property $propname$ As System.Collections.Generic.List(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c4408d18-3bf2-497a-881b-eeac74ef9df2" shortcut="pl.i" description="An automatic property of type System.Collections.Generic.List(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.List(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4871e374-8020-43c1-a929-06ea05b1ebaa" shortcut="pl.m" description="An automatic property of type System.Collections.Generic.List(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.List(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="e3f0b064-f219-4b30-90fd-cd2974bb8eab" shortcut="pl.s" description="An automatic property of type System.Collections.Generic.List(Of String)" text="Public Property $propname$ As System.Collections.Generic.List(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ce161b61-53cd-4e68-8367-54c39fd32547" shortcut="pl.l" description="An automatic property of type System.Collections.Generic.List(Of Long)" text="Public Property $propname$ As System.Collections.Generic.List(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="5fd85a8e-35b9-4dda-b64e-a4c6163f8e0d" shortcut="pl.u" description="An automatic property of type System.Collections.Generic.List(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.List(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="58d35ad2-4326-4b64-a864-0e26cf563e92" shortcut="pl.g" description="An automatic property of type System.Collections.Generic.List(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.List(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="114c76c1-5d32-4db2-8dec-077e5c8509d1" shortcut="pl.t" description="An automatic property of type System.Collections.Generic.List(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.List(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="ddd835ee-6c23-412d-9a64-ce2a43408faf" shortcut="ph.b" description="An automatic property of type System.Collections.Generic.HashSet(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="303a0362-c169-4ab0-9f3b-74f3c1a3c3b4" shortcut="ph.c" description="An automatic property of type System.Collections.Generic.HashSet(Of Char)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="853cab40-d730-44bc-b038-832b10aed76a" shortcut="ph.f" description="An automatic property of type System.Collections.Generic.HashSet(Of Single)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f3941b17-2864-4fe6-ba97-7c7022812ede" shortcut="ph.by" description="An automatic property of type System.Collections.Generic.HashSet(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f0a6c77a-caed-4d43-98f7-003205590251" shortcut="ph.d" description="An automatic property of type System.Collections.Generic.HashSet(Of Double)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="73ab4acd-ed29-4e7a-9816-49bd08c02359" shortcut="ph.i" description="An automatic property of type System.Collections.Generic.HashSet(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c1f9a9e6-d817-4afd-9d1f-247ce857569d" shortcut="ph.m" description="An automatic property of type System.Collections.Generic.HashSet(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="b04b945d-b08f-4d50-9763-f78262979f1e" shortcut="ph.s" description="An automatic property of type System.Collections.Generic.HashSet(Of String)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b03bba8-4562-4b55-a7f5-5b041adb2b03" shortcut="ph.l" description="An automatic property of type System.Collections.Generic.HashSet(Of Long)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c79ad6cd-cf15-4266-b643-34ea90f95d78" shortcut="ph.u" description="An automatic property of type System.Collections.Generic.HashSet(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="71183f54-d628-43db-95aa-d53c336bf353" shortcut="ph.g" description="An automatic property of type System.Collections.Generic.HashSet(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="541a704f-76f7-41ff-ac7e-c6d1619c6056" shortcut="ph.t" description="An automatic property of type System.Collections.Generic.HashSet(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.HashSet(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="30693edb-dfaa-44b2-b169-e28ba70d4f1c" shortcut="p~b" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Boolean)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Boolean)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="550d5dd9-aa9c-4b55-a4c5-e5474a8f45a7" shortcut="p~c" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Char)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Char)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="50ce9c73-a608-4423-be76-d5996e736970" shortcut="p~f" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Single)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Single)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="9adc4e34-2b36-44b4-8f4c-3e80b1a6c79b" shortcut="p~by" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Byte)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Byte)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="1b62d08a-99f3-4c47-9951-ce7c5d005a8b" shortcut="p~d" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Double)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Double)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="608cb776-c2d2-4e0d-9035-091b266da619" shortcut="p~i" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Integer)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Integer)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="45dda609-35a4-45e5-9bda-a40bc16cfd40" shortcut="p~m" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Decimal)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Decimal)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="d0472a4f-5120-4804-aa02-1022edd909cf" shortcut="p~s" description="An automatic property of type System.Collections.Generic.IEnumerable(Of String)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of String)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="fab7b3a8-ad18-49a8-a1ef-f1af52dea038" shortcut="p~l" description="An automatic property of type System.Collections.Generic.IEnumerable(Of Long)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of Long)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="f7554801-f6cc-4a34-a968-9771c2b5e5fc" shortcut="p~u" description="An automatic property of type System.Collections.Generic.IEnumerable(Of UInteger)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of UInteger)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="c539d267-1946-4b20-8294-ec48142970de" shortcut="p~g" description="An automatic property of type System.Collections.Generic.IEnumerable(Of System.Guid)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of System.Guid)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
  <Template uid="4bca34d8-e116-49f5-bc39-84ad3f5f7b65" shortcut="p~t" description="An automatic property of type System.Collections.Generic.IEnumerable(Of System.DateTime)" text="Public Property $propname$ As System.Collections.Generic.IEnumerable(Of System.DateTime)" reformat="True" shortenQualifiedReferences="True">
    <Context>
      <VBContext context="TypeMember, TypeAndNamespace" minimumLanguageVersion="2.0" />
    </Context>
    <Variables>
      <Variable name="propname" expression="constant(&quot;SomeProperty&quot;)" initialRange="0" />
    </Variables>
  </Template>
</TemplatesExport>